<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\Development\Development\Core\Builds\Latest\Core.Test.dll" total="1287" errors="2" failures="0" not-run="36" inconclusive="0" ignored="36" skipped="0" invalid="0" date="2011-05-20" time="10:26:46">
  <environment nunit-version="2.5.10.11092" clr-version="2.0.50727.3615" os-version="Microsoft Windows NT 5.1.2600 Service Pack 3" platform="Win32NT" cwd="D:\Program Files\NUnit 2.5.10\bin\net-2.0" machine-name="AH40305400" user="Viral.Shah" user-domain="AH" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="Assembly" name="D:\Development\Development\Core\Builds\Latest\Core.Test.dll" executed="True" result="Failure" success="False" time="109.002" asserts="0">
    <results>
      <test-suite type="Namespace" name="AvisEurope" executed="True" result="Success" success="True" time="80.486" asserts="0">
        <results>
          <test-suite type="Namespace" name="WebDev" executed="True" result="Success" success="True" time="80.486" asserts="0">
            <results>
              <test-suite type="Namespace" name="Framework" executed="True" result="Success" success="True" time="1.172" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="0.141" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Server" executed="True" result="Success" success="True" time="0.063" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.063" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="DataPortalServerTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Common.Server.Test.DataPortalServerTest.CreateAPortalInstance" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.063" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="BusinessCollectionBaseTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                            <results>
                              <test-case name="AvisEurope.WebDev.Framework.Common.Test.BusinessCollectionBaseTest.ConvertsCollectionToAnotherType" executed="True" result="Success" success="True" time="0.047" asserts="4" />
                              <test-case name="AvisEurope.WebDev.Framework.Common.Test.BusinessCollectionBaseTest.ConvertsDeletedItemsToAnotherType" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                              <test-case name="AvisEurope.WebDev.Framework.Common.Test.BusinessCollectionBaseTest.ExceptionWhenDeletedMemberCannotBeConvertedToType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                              <test-case name="AvisEurope.WebDev.Framework.Common.Test.BusinessCollectionBaseTest.ExceptionWhenMemberCannotBeConvertedToType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="GuidEventArgsTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="AvisEurope.WebDev.Framework.Common.Test.GuidEventArgsTest.ValueSetByConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Windows" executed="True" result="Success" success="True" time="1.031" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="1.031" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Business" executed="True" result="Success" success="True" time="1.000" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="BusinessBaseCollectionWindowsTest" executed="True" result="Success" success="True" time="0.859" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.ContainsADataLoader" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.ContainsADataSaver" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.DataSaveCallsDataSaveOnListItems" executed="True" result="Success" success="True" time="0.656" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.DataSaveSendTransactionToListItems" executed="True" result="Success" success="True" time="0.078" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.DeletedItemsClearedBySave" executed="True" result="Success" success="True" time="0.094" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.DerivesFromBusinessBaseCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.ExceptionOnSaveWhenNoDataSaver" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.NoDataLoadedOnNullDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.NothingLoadedIfNullDataSet" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.NothingLoadedOnNullDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.RegisterAsChildMarksAsChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.RegisterAsChildSetsParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SaveCallsDataSaveOnDeletedItems" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SaveCallsDataSaveOnListItems" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SaveCommittedCalledOnListItemsBySave" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SaveInitiatesATransaction" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SavePassesTransactionToDeleteItems" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SavePassesTransactionToListItems" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.StaticCreateCreatesInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.StaticCreatesInstanceUsingFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseCollectionWindowsTest.SupportsIBusinessEntity" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="BusinessBaseWindowsChildrenTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.ContainsAChildEntityController" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.IsDirtyWhenChildIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.IsValidWhenChildIsValid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.LoadPassesReaderToDescendants" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.MarksAsChildWhenRegisteredAsChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.SaveCommittedCallsSaveComittedOnDescendants" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.SaveInitiatesATransaction" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.SavePassesTransactionToDescendants" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.StoresParentWhenRegisteredAsChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsChildrenTest.SupportsIBusinessEntity" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="BusinessBaseWindowsTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.CallToHydrateInstancePassesSubjectAsInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.ContainsDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.DataLoadCallsDataLoaderHydrate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.DataLoadMarksAsOld" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.DataPortalFetchSetsIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.DataSaveCalledWhenNoDataSaver" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.DeleteWhenDeleted" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.ExceptionOnDataPortalUpdateWhenNotTransactional" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.InsertsWhenNew" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.IsNotTransactionalWhenSaverNotTransactional" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.IsSaveableWhenDataSaverAssigned" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.IsTransactionalFalseWhenNoSaver" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.IsTransactionalWhenSaverIsTransactional" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.LoadCallsDataLoaderHydrateInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.NoDataOnDataLoaderWhenNoLoader" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.NoInsertsWhenNewAndDeleted" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.NoSaveWhenClean" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.NotIsSaveableWhenNoDataSaver" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.SaveCommittedSetsIsDirtyFlag" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.StaticCreateCreatesInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.StaticCreateCreatesInstanceUsingFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.ThrowExceptionOnSaveIfNotSaveable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.BusinessBaseWindowsTest.UpdateWhenDirty" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ChildEntityControllerTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.DeterminesIfAnEntityIsRegistered" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.DeterminesIfAnEntityIsUnregistered" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ExceptionIfNullRegistered" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ExceptionIfNullUnregistered" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ExceptionIfUnregisteredNotPreviouslyRegistered" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ExceptionInConstructorIfNullParent" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.InformsEntityOfRegistration" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsDirtyWhenAnyChildIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsEnumerable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsNotDirtyWhenNoChildren" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsNotDirtyWhenNoChildrenDirty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsValidWhenAllValid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.IsValidWhenNoChildren" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.NotValidWhenAnyIsInvalid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ParentPropertySetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.RegistersChildren" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ReturnsAGenericEnumerator" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.ReturnsAnEnumerator" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.SaveCommittedCallsSaveCommittedFollowingSave" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.SavePassesTransactionToRegistered" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.UnregistersAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Business.ChildEntityControllerTest.UnregistersChildren" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Data" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="DataLoaderCriteriaTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Data.DataLoaderCriteriaTest.ContainsDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Mocks" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="BusinessFactorySurrogateTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Mocks.BusinessFactorySurrogateTest.DataPortalCallsCreateOnFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Mocks.BusinessFactorySurrogateTest.DataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Mocks.BusinessFactorySurrogateTest.ExceptionIfFactoryIsNotSerializable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Mocks.BusinessFactorySurrogateTest.ExceptionIfFactoryIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Framework.Windows.Test.Mocks.BusinessFactorySurrogateTest.ReturnsObjectCreatedByDataPortal" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Heracles" executed="True" result="Success" success="True" time="79.267" asserts="0">
                <results>
                  <test-suite type="Namespace" name="BusinessObjects" executed="True" result="Success" success="True" time="64.173" asserts="0">
                    <results>
                      <test-suite type="SetUpFixture" name="Test" executed="True" result="Success" success="True" time="0.188" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="DomainNameCollectionTest" executed="True" result="Success" success="True" time="0.188" asserts="0">
                            <results>
                              <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Test.DomainNameCollectionTest.GetAllReturnsACollection" executed="True" result="Success" success="True" time="0.188" asserts="1">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Windows" executed="True" result="Success" success="True" time="63.985" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="63.985" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Adverts" executed="True" result="Success" success="True" time="1.203" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="AdvertDataTransformerTest" executed="True" result="Success" success="True" time="0.344" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ContainsAdvertIdCriteria" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ContainsLanguageIdCriteria" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.DeletesAnAdvert" executed="True" result="Success" success="True" time="0.031" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionIfTransactionNullToDelete" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionIfTransactionNullToInsert" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionIfTransactionNullToUpdate" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionOnHydrateWhenDataIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionOnHydrateWhenInstanceIsNotAdvert" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionOnHydrateWhenInstanceIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionOnHydrateWhenNoData" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.ExceptionOnHydrateWhenNoDataAvailable" executed="True" result="Success" success="True" time="0.188" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.FetchesDataForAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.FetchReturnsThreeDataSets" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.InsertsAnAdvert" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.NoMoreDataAfterPopulation" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulateEndDate" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesAdvertGuid" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesAdvertTypeId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesDomainGuid" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesRank" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesStartDate" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.PopulatesWinNode" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.SecondDataSetIsNamed" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.StartsATransactionOnMerchandising" executed="False" result="Ignored">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                        <reason>
                                          <message><![CDATA[]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.SupportsIDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.SupportsITransactionalDataSaver" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertDataTransformerTest.UpdatesAnAdvert" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertFactoryTest" executed="True" result="Success" success="True" time="0.094" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.CreateReturnsAnAdvert" executed="True" result="Success" success="True" time="0.031" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.PopulatesAdvertImage" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.PopulatesAdvertText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.PopulatesAdvertWithData" executed="True" result="Success" success="True" time="0.031" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.PopulatesDataSaverAndDataLoaderAsSameInstance" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.PopulatesNavigations" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertFactoryTest.SupportsIBusinessFactory" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertImageDataTransformerTest" executed="True" result="Success" success="True" time="0.109" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ContainsData" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DataAvailableWhenAllConditionsMet" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DataNotAvailableAfterFirstHydrate" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DataNotAvailableIfMissingTable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DataNotAvailableIfNoData" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DataNotAvailableIfNoDataSet" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.DeletesData" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToDeleteIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToDeleteIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToInsertIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToUpdateIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfInstanceToUpdateIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfTransactionToDeleteIsNull" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfTransactionToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionIfTransactionToUpdateIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionOnHydrateWhenInstanceNotAdvertImage" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionOnHydrateWhenInstanceNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionOnHydrateWhenNoDataAvailable" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionOnHydrateWhenParentNotAnAdvert" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.ExceptionOnHydrateWhenParentNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.InsertsData" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.IsSerializable" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.PopulatesAdvertImage" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.SupportsIDataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.SupportsIDataSaver" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageDataTransformerTest.UpdatesData" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertImageTest" executed="True" result="Success" success="True" time="0.094" asserts="4">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.AltTextCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingAltTextMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingDestinationUrlMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingFilenameForLargeSizeMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingFilenameForStandardSizeMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingHoverTextMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ChangingIsDefaultMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsAltText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsDestinationUrl" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsFilenameForLargeSize" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsFilenameForStandardSize" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsHoverText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsImageId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsIsDefault" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ContainsLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.DataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.FilenameForLargeSizeCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.FilenameForStandardSizeCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.HoverTextCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.ImageIdCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.LargeImageIsNullWhenNotFound" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.LoadsTheLargeImage" executed="True" result="Success" success="True" time="0.047" asserts="4285">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.LoadsTheStandardImage" executed="True" result="Success" success="True" time="0.016" asserts="2305">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertImageTest.StandardImageIsNullWhenNotFound" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertNavigationCollectionTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationCollectionTest.IsACollectionOfAdvertNavigations" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationCollectionTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertNavigationDataTransformerTest" executed="True" result="Success" success="True" time="0.188" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.DeletesData" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToDeleteIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToDeleteIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToInsertIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToUpdateIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfInstanceToUpdateIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfTransactionToDeleteIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfTransactionToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.ExceptionIfTransactionToUpdateIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesAdvertNavigationId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesDisplayOrder" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesOpenInNewWindow" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.HydratesUrl" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.InsertsData" executed="True" result="Success" success="True" time="0.078" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.IsADataLoader" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.IsADataSaver" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationDataTransformerTest.UpdatesData" executed="True" result="Success" success="True" time="0.078" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertNavigationTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsAdvertNavigationId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsDisplayOrder" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsOpenInNewWindow" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.ContainsUrl" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.DataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.IsValid" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.SettingDisplayOrderMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.SettingOpenInNewWindowMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.SettingTextMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.SettingUrlMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.TextCannotBeEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNavigationTest.TextCannotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertNewInsertedInstanceTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNewInsertedInstanceTest.ExceptionWhenDomainIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNewInsertedInstanceTest.InstanceHasDataSaverAttached" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNewInsertedInstanceTest.InstanceHasDomainGuidSet" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNewInsertedInstanceTest.InstanceIsMarkedNew" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertNewInsertedInstanceTest.ReturnsAnAdvertInstance" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.AdvertGuidCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.AdvertIdCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.AdvertTypeIdCannotBeNull" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsAdvertGuid" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsAdvertText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsAdvertTypeId" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsAnAdvertImage" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsDomain" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsListOfNavigations" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsNodeLinks" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.ContainsRank" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.DataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.DomainCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.EndDateCanBeNull" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.EndDateCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.EndDateCannotBeSameAsStartDate" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.EndDateMustBeLaterThanStartDate" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.EndDateTruncatesSeconds" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.NavigationsIsRegisteredAsChildEntity" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.NodeAttachedToCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingAdvertImageMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingAdvertTypeIdMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingEndDateMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingRankMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingStartDateMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingTextMarksDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingTextRegistersItAsChild" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.SettingTextUnregistersExistingText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.StartDateCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.StartDateCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTest.StartDateTruncatesSeconds" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertTextDataTransformerTest" executed="True" result="Success" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ContainsData" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataAvailableWhenAllConditionsMet" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataNotAvailableOnSecondHydrate" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataNotAvailableWhenAdvertTextIdIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataNotAvailableWhenDataIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataNotAvailableWhenNoRows" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DataNotAvailableWhenTableMissing" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.DeletesData" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToDeleteIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToDeleteIsWrongType" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToInsertIsWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToUpdateIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfInstanceToUpdateIsWrongType" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfTransactionToDeleteIsNull" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfTransactionToInsertIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionIfTransactionToUpdateIsNull" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionOnHydrateWhenInstanceNotAdvertImage" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionOnHydrateWhenInstanceNull" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.ExceptionOnHydrateWhenNoDataAvailable" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.InsertsData" executed="True" result="Success" success="True" time="0.031" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.PopulatesAnAdvertText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.SettingDataMakesDataAvailableAgain" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.SupportsIDataLoader" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.SupportsIDataSaver" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextDataTransformerTest.UpdatesData" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="AdvertTextTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.ChangingDetailSetsIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.ChangingTitleSetsIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.ContainLanguage" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.ContainsAdvertId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.ContainsAdvertTextId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.DetailCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.DetailIsAssignable" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.IsDataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.TitleCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Adverts.AdvertTextTest.TitleIsAssignable" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="CmsUsers" executed="True" result="Success" success="True" time="0.250" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="CmsUserCollectionTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserCollectionTests.GetAll" executed="True" result="Success" success="True" time="0.094" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserCollectionTests.Sort" executed="True" result="Success" success="True" time="0.031" asserts="198">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="CmsUserDomainNameLinkTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.Constructor" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.DomainNameId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.EqualityDifferent" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.EqualityNull" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.EqualitySame" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.EqualityWrongType" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.HashCode" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.ToStringNullValues" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.ToStringWithValues" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserDomainNameLinkTest.UserId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="CmsUserFactoryTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.CreateByUserNameAndAdDomain" executed="True" result="Success" success="True" time="0.031" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.CreateByUserNameAndAdDomainReturnsNullForNonExisingUser" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.EmptyCmsUser" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.GetAllUsers" executed="True" result="Success" success="True" time="0.031" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.GetCurrentUser" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserFactoryTest.GetSystemUser" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="CmsUserTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.AddDomain" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.AuthenticationType" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.Constructor" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.DomainCollectionToArray" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.IsAuthenticated" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.Name" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.NewInstanceForInsertion" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.CmsUsers.CmsUserTest.Roles" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Domains" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="DomainCultureTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.EqualityBasedOnKeyFields" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.EqualityOperatorOverridden" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualityForCountryId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualityForDomainCountryLinkId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualityForDomainNameId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualityForLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualsEqualForCountryId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualsEqualForDomainCountryLinkId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualsEqualForDomainNameId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Domains.DomainCultureTest.NegativeEqualsEqualForLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="DTOs" executed="True" result="Success" success="True" time="0.375" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ExtrasDataAccessTest" executed="True" result="Success" success="True" time="0.375" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.DeletesAnExtra" executed="True" result="Success" success="True" time="0.344" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.DeletesAnExtraBlackout" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesDataForExtraBlackout" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesDataForExtras" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesDataForExtraText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesExtraCategoriesFromDatabase" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesNullWhenNoExtras" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesNullWhenNoExtraText" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchesNullWhenThereAreNoCategories" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.FetchReturnsNullWhenNoData" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.InsertAnExtraAndReturnsTheNewId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.InsertAnExtraBlackoutAndReturnsTheNewId" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.InsertsAnExtraTextAndReturnsNewId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.UpdatesAnExtra" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.UpdatesAnExtraBlackout" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.DTOs.ExtrasDataAccessTest.UpdatesAnExtraText" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Extras" executed="True" result="Success" success="True" time="0.109" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ExtraTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ExtraTest.ChangesToBlackoutCanBeUndone" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ExtraTest.ChangesToExtraCanBeUndone" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ExtraTextTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ExtraTextTest.IsCloneable" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ValidationRuleTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.MaxSellingPriceNegativeValue" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.MaxSellingPricePositiveValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.MaxSellingPriceZeroValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPriceEqualToMaxSellingPrice" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPriceGreaterThanMaxSellingPrice" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPriceLessThanMaxSellingPrice" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPriceNegativeValue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPricePositiveValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.SellingPriceZeroValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardEquipmentTextEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardEquipmentTextLongString" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardEquipmentTextMaxLengthString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardEquipmentTextNullString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardEquipmentTextShortString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextLongString" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextMaxLengthString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextNullString" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextPopulatedString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Extras.ValidationRuleTests.WizardRemarksTextShortString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="GenericTexts" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="GenericTextFactoryTest" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryCreateForLanguage" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryCreateForName" executed="True" result="Success" success="True" time="0.031" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryCreateForText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryCreateReturnsAGenericTextCollection" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryCreateReturnsNonEmptyCollection" executed="True" result="Success" success="True" time="0.016" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactoryIsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextFactoryTest.GenericTextFactorySupportsIBusinessFactory" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="GenericTextTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextContainsName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextContainsTextId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextContainsTypeId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextDataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextNameCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.GenericTexts.GenericTextTest.GenericTextTypeCannotBeBlank" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Hyperlinks" executed="True" result="Success" success="True" time="0.594" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="GetHyperlinkTests" executed="True" result="Success" success="True" time="0.578" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Hyperlinks.GetHyperlinkTests.GetHyperlinkFiveParamsEmptyLocale" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Hyperlinks.GetHyperlinkTests.GetHyperlinkFiveParamsNullLocale" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Hyperlinks.GetHyperlinkTests.GetHyperlinkTwoParams" executed="True" result="Success" success="True" time="0.063" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Hyperlinks.GetHyperlinkTests.GetHyperlinkWithPageId" executed="True" result="Success" success="True" time="0.203" asserts="8">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Hyperlinks.GetHyperlinkTests.GetHyperlinkWithUrl" executed="True" result="Success" success="True" time="0.313" asserts="7">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="LocationSearch" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="KeyWordTester" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.AcceptableInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.DiacraticCharacterInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.EscapeSequenceInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.InvalidInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.NumberInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.SpacedInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.TooLongInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.TooShortInput" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.LocationSearch.KeyWordTester.WithInvalidConstructorArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Promotions" executed="True" result="Success" success="True" time="1.172" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="PromotionSummaryCollectionTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryCollectionTest.IsACollectionOfPromotionSummaries" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryCollectionTest.IsDataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionSummaryDataLoaderTest" executed="True" result="Success" success="True" time="0.594" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.FetchReturnsData" executed="True" result="Success" success="True" time="0.078" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.HydratesId" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.HydratesName" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.HydratesParentPromotionId" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.HydratesTypeId" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.HydratesWhileThereIsData" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.IsSerializable" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryDataLoaderTest.SupportsIDataLoader" executed="True" result="Success" success="True" time="0.109" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionSummaryFactoryTest" executed="True" result="Success" success="True" time="0.219" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryFactoryTest.CollectionContainsCorrectNumberOfItems" executed="True" result="Success" success="True" time="0.141" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryFactoryTest.CreatesACollection" executed="True" result="Success" success="True" time="0.078" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryFactoryTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryFactoryTest.SupportsIBusinessFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionSummaryTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.ContainsCategory" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.ContainsId" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.ContainsName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.ContainsParentPromotionId" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.DerivesFromBusinessBaseWindows" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.DeterminesEquality" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.IsDataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionSummaryTest.ParentPromotionIdCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionTermAndConditionCollectionTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionCollectionTest.GetsTheNextSequence" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionCollectionTest.IsACollectionOfPromotionTermAndCondition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionCollectionTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionTermAndConditionTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ChangingSequenceSetsIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ChangingTextSetsIsDirty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ContainsLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ContainsSequence" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ContainsTermAndConditionId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ContainsTermAndConditionTextId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.ContainsText" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.IsDataPortalCompliant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.SequenceCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.SequenceCannotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.TermAndConditionIdCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.TermAndConditionTextIdCanBeNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.TextCannotBeEmpty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTest.TextCannotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="PromotionTermAndConditionTransformerTest" executed="True" result="Success" success="True" time="0.328" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.DeletesARecordFromPromotionTermAndCondition" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.DeletesARecordFromPromotionTermAndConditionText" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.HydratesPromotionId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.HydratesSequence" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.HydratesTermAndConditionId" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.HydratesTermAndConditionTextId" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.HydratesText" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.InsertAPromotionTermAndConditionRecord" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.InsertAPromotionTermAndConditionTextRecord" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.IsADataTransformerForPromotionTermAndCondition" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.UpdateForNewLanguageIdInsertsPromotionTermAndConditionTextRecord" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Promotions.PromotionTermAndConditionTransformerTest.UpdatesAPromotionTermAndConditionTextRecord" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="RedirectUrls" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="RedirectUrlCollectionTest" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.RedirectUrls.RedirectUrlCollectionTest.FetchAllReturnsMoreThanOneItem" executed="True" result="Success" success="True" time="0.063" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.RedirectUrls.RedirectUrlCollectionTest.FetchByIdReturnsASingleItem" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.RedirectUrls.RedirectUrlCollectionTest.FetchByIdReturnsItemForGivenId" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Resources" executed="True" result="Success" success="True" time="31.063" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ResourceFactoryTest" executed="True" result="Success" success="True" time="31.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Resources.ResourceFactoryTest.CannotPassNullUserWhenSearchingForMissingTranslations" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Resources.ResourceFactoryTest.CanSaveResourceTextsWithMissingTranslations" executed="True" result="Success" success="True" time="20.922" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.Resources.ResourceFactoryTest.CreatesAListOfMissingTranslationsForAUser" executed="True" result="Success" success="True" time="9.563" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="WizardRegion" executed="True" result="Success" success="True" time="28.969" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="GetWizardRegionCollectionByWizardDetailTests" executed="True" result="Success" success="True" time="10.391" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionByWizardDetailTests.GetWizardRegionCollectionByWizardDetail_EmptyString" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionByWizardDetailTests.GetWizardRegionCollectionByWizardDetail_InvalidString" executed="True" result="Success" success="True" time="3.516" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionByWizardDetailTests.GetWizardRegionCollectionByWizardDetail_NullString" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionByWizardDetailTests.GetWizardRegionCollectionByWizardDetail_RegionCode" executed="True" result="Success" success="True" time="3.438" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionByWizardDetailTests.GetWizardRegionCollectionByWizardDetail_RegionName" executed="True" result="Success" success="True" time="3.406" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="GetWizardRegionCollectionTests" executed="True" result="Success" success="True" time="18.563" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollection" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionAll" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_EmptyLocation" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_MultiLocations" executed="True" result="Success" success="True" time="5.734" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_MultiLocationsOneInvalid" executed="True" result="Success" success="True" time="5.672" asserts="5">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_NullLocation" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_SingleInvalidLocation" executed="True" result="Success" success="True" time="3.641" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionCollectionTests.GetWizardRegionCollectionByLocation_SingleLocation" executed="True" result="Success" success="True" time="3.484" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="GetWizardRegionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionTests.GetWizardRegion_EmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionTests.GetWizardRegion_InvalidRegionCode" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionTests.GetWizardRegion_NullString" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.BusinessObjects.Windows.Test.WizardRegion.GetWizardRegionTests.GetWizardRegion_ValidRegionCode" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="5.172" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="ClipboardManager" executed="True" result="Success" success="True" time="0.172" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.172" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ApplicationClipboardTest" executed="True" result="Success" success="True" time="0.172" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.ApplicationClipboardCannotSetNullDataObject" executed="True" result="Success" success="True" time="0.156" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.ApplicationClipboardNotifiedOnAdd" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.ApplicationNotifiedOnClear" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.DataObjectAlwaysReturned" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.EnsureDataObjectIsNotWrapped" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.IfSetClearTheDataPresentTypeIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.SimpleAddedObjectCanBeRetrieved" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.StringAddedObjectCannotBeRetrievedAsInt" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.ClipboardManager.Test.ApplicationClipboardTest.WindowsClipboardNotifiedOnAdd" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Security" executed="True" result="Success" success="True" time="0.328" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Windows" executed="True" result="Success" success="True" time="0.328" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.328" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ActiveDirectoryUserTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.ActiveDirectoryUserTest.FieldsInitialisedByCtor" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="CcsdPrincipalTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.CcsdPrincipalTest.IsInRoleIsFalseWhenIdentityNotSet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.CcsdPrincipalTest.IsInRoleIsFalseWhenIdentityNotSetUsingHasAccess" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="RoleServiceTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.RoleServiceTest.CreateInstanceOfRole" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.RoleServiceTest.FetchRolesFromAssembly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="RoleTypeCodeAttributeTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.RoleTypeCodeAttributeTest.CreateInstance" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="SecurityAccessComponentTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.AccessIsAlwaysGrantedWhereComponentHasNoRoles" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.AccessIsNotGrantedIfNoCurrentUser" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.AuthorisationCanBeDeferredThruAnEvent" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.CanExtendAControl" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.CanExtendAMenuItem" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.CanExtendAToolStripItem" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.CannotExtendAnythingElse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.ContainsBehaviourForEachComponent" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.ContainsRolesForEachComponent" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.DeterminesIfAComponentIsNotSecured" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.DeterminesIfAComponentIsSecured" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.DisablesUnAuthorisedComponentThruEnabledPropertyWhenReadOnlyIsMissing" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.DisablesUnAuthorisedComponentThruReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.EmptyRoleListIsDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.EnabledStateIsDefaultBehavoiur" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.EnablesAuthorisedComponentThruReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.EnablesUnAuthorisedComponentThruEnabledPropertyWhenReadOnlyIsMissing" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.HidesUnAuthorisedComponent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.SetsContainerThruCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.SecurityAccessComponentTest.ShowsAuthorisedComponent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="UI" executed="True" result="Success" success="True" time="0.234" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="RoleEditorFormTest" executed="True" result="Success" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.UI.RoleEditorFormTest.PopulateRoles" executed="True" result="Success" success="True" time="0.109" asserts="11" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Security.Windows.Test.UI.RoleEditorFormTest.SetText" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Utilities" executed="True" result="Success" success="True" time="2.391" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="2.391" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="DisposalManagerTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.DisposalManagerTest.DisposeItemCollection" executed="True" result="Success" success="True" time="0.016" asserts="10" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.DisposalManagerTest.DisposeItemsAdded" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.DisposalManagerTest.RemoveItem" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.DisposalManagerTest.RemoveItemsCollection" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="EnumHelperTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                              <test-suite type="TestFixture" name="LocalDiskStorageManagerTest" executed="True" result="Success" success="True" time="0.594" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.DeleteFile" executed="True" result="Success" success="True" time="0.250" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.FileExists" executed="True" result="Success" success="True" time="0.172" asserts="10" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.IsoStorageFileFactory" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.ReadFile" executed="True" result="Success" success="True" time="0.031" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.Remove" executed="True" result="Success" success="True" time="0.078" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.LocalDiskStorageManagerTest.WriteFile" executed="True" result="Success" success="True" time="0.047" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Patterns" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                <results>
                                  <test-suite type="Namespace" name="LazyLoad" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="LazyLoadListProxyTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.AddCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.ClearCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.ContainsCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.CopyToCausesLoad" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.CriteriaIsPassedToLoader" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.GetEnumeratorGenericCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.GetEnumeratorNonGenericCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.GettingCountCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.GettingIsReadOnlyCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.GettingThruIndexerCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.IndexOfCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.InsertCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.LoaderCannotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.RemoveAtCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.RemoveCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.LazyLoadListProxyTest.SettingThruIndexerCausesLoad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="UndoableLazyLoadListProxyTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.UndoableLazyLoadListProxyTest.UndoToListAfterLoad" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Patterns.LazyLoad.UndoableLazyLoadListProxyTest.UndoToListBeforeLoad" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ProtocolRewriterWhenUserNotSignedInTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.BaseUrlIsInsecurePath" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ExternalUrlProtocolUnchanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.LocalAbsoluteUrlProtocolUnchanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingExternalAbsoluteUrlTwiceReturnsUnchanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingInsecureExternalUrlForIFrameWhenCurrentRequestIsSecureReturnsSecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingLocalAbsoluteUrlTwiceReturnsValidInsecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingRelativeUrlTwiceReturnsValidInsecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingRelativeUrlUnderSecureFolderReturnsSecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.ProcessingSecureExternalUrlForIFrameReturnsSecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserNotSignedInTests.RelativeUrlBecomesInsecureAbsoluteUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ProtocolRewriterWhenUserSignedInTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserSignedInTests.ExternalUrlProtocolUnchanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserSignedInTests.ProcessingExternalAbsoluteUrlTwiceReturnsUnchanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ProtocolRewriterWhenUserSignedInTests.ProcessingInsecureExternalUrlForIFrameReturnsSecureUrl" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ResourceTextExternalUnitTest" executed="True" result="Success" success="True" time="1.641" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.ResourceTextExternalUnitTest.TestUK" executed="True" result="Success" success="True" time="1.641" asserts="1">
                                    <categories>
                                      <category name="Integration" />
                                    </categories>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SingletonTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.ADisposedInstanceIsReInitialised" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.CannotBeInitalisedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.CreatesAnInstanceOnDemand" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.ExisitingInstanceIsDisposedOnReInitialisation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.InstanceCanBeInitialisedWithSpecificInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.InstanceCanBePrimedWithCtorParams" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.InstanceCanBeReinitialised" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.InstanceIsAlwaysTheSameObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.SingletonTest.SettingTheCtorParamsCausesReinitialisation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Undo" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ListUndoStrategyTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ListUndoStrategyTest.CreatesANewListInstanceIfRequired" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ListUndoStrategyTest.UndoesListContentsToASavePoint" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ReflectionUndoStrategyTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.CreatesAnInstanceOfTheUndoableObjectIfRequired" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.DisconnectsAnInstanceOfTheUndoableObjectIfRequired" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.RetrievesNullIfTheValueNotStored" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.StoresASavePointFieldInASavePointToCreateAChain" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.StoresTheValuesOfUndoableObjectsAsASavePoint" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.StoresTheValuesOfValueTypeFields" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.UndoChangesToASavePointField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.UndoChangesToStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.UndoChangesToUndoableObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.Undo.ReflectionUndoStrategyTest.UndoChangesToValueTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="UniqueListTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Utilities.Test.UniqueListTest.UniqueItemsAreOnlyAddedOnce" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Windows" executed="True" result="Success" success="True" time="2.250" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="2.250" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Controllers" executed="True" result="Success" success="True" time="0.109" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ApplicationEnvironmentTest" executed="True" result="Success" success="True" time="0.109" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.ConnectionDoesExist" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.ConnectionDoesNotExist" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.DefaultEnvironmentIsConfiguredThruDeployment" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.DeterminesWhetherSettingDoesExist" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.DeterminesWhetherSettingDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.DontGetAnDefaultValueWhenConnectionIsNotMissing" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.DontGetAnDefaultValueWhenSettingIsNotMissing" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.ErrorWhenSectionMissing" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetADefaultValueWhenSettingIsMissing" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetAnDefaultValueWhenConnectionIsMissing" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetAnExceptionForConnectionStringValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetAnExceptionForExistingValue" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetAnExisitingValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetConnectionStringInfo" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetConnectionStringValue" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.GetDefaultEnvironment" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.ReturnNames" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[We dont test static classes that require app files, not on my watch]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controllers.ApplicationEnvironmentTest.TextSetByConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Controls" executed="True" result="Success" success="True" time="0.281" asserts="0">
                                <results>
                                  <test-suite type="Namespace" name="TableViewControl" executed="True" result="Success" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-suite type="Namespace" name="InplaceOptions" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                        <results>
                                          <test-suite type="TestFixture" name="CellOptionsStateTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                            <results>
                                              <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.InplaceOptions.CellOptionsStateTest.ChangeState" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="TableViewHeaderTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewHeaderTest.Inject" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="TableViewTest" executed="True" result="Success" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.AttachListChanged" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.AutoCalculateHeaders" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.ControlCellOptions" executed="True" result="Success" success="True" time="0.172" asserts="4" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.DetachListChanged" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.LoadDataSource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.OnPaint" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                                          <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Controls.TableViewControl.TableViewTest.ReCalculateScrollbars" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Extensions" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="StringExtensionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Extensions.StringExtensionTests.WhenCallingLeftAskingForTooManyCharsWillReturnTheFullLength" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Extensions.StringExtensionTests.WhenGivenAStringAndARequestforFewerLettersTheSmallerStringIsReturned" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Extensions.StringExtensionTests.WhenGivenAStringAndARequestWithTheSameNumberOfLettersTheEntireStringIsReturned" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Extensions.StringExtensionTests.WhenPassingANullInWeGetANullBack" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Extensions.StringExtensionTests.WhenPassingInAnEmptyStringWeGetAnEmptyStringBack" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ListObjectTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.ListObjectTest.TextSetByConstructor" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="PropertyLayoutTest" executed="True" result="Success" success="True" time="1.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CanSetAndGetSelectedObject" executed="True" result="Success" success="True" time="0.500" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckCustomTypeConverter" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckCustomTypeConverterSetValue" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckNumericInplaceEditor" executed="True" result="Success" success="True" time="0.125" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckNumericInplaceEditorSetValue" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckTextInplaceEditor" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.CheckTextInplaceEditorSetValue" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmAllDotNetTypes" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmAllNullableDotNetTypes" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmLayoutConformsToAlphabeticalOrdering" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmLayoutConformsToColumnSpec" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmLayoutConformsToPropertySequence" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.PropertyLayoutTest.ConfirmLayoutExposesPublicPropertyCount" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="0.813" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="BaseServiceTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.ActivationType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.DummyType" executed="True" result="Success" success="True" time="0.047" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.Execute" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.ExecuteNullArgs" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.IsAvailable" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.BaseServiceTest.TypeNamespaces" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="DefaultFormBuilderTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.DefaultFormBuilderTest.GenericBuild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="NodeCollectionTest" executed="True" result="Success" success="True" time="0.688" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Clear" executed="True" result="Success" success="True" time="0.625" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.CollectionChanged" executed="True" result="Success" success="True" time="0.016" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Contains" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.CopyTo" executed="True" result="Success" success="True" time="0.000" asserts="7">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.DoesNotContain" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.GetEnumerator" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.GetParent" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.IndexOf" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Insert" executed="True" result="Success" success="True" time="0.016" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.IsReadOnly" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Item" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Load" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.Remove" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.RemoveAt" executed="True" result="Success" success="True" time="0.031" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeCollectionTest.ToArray" executed="True" result="Success" success="True" time="0.000" asserts="5">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="NodeTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Children" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Constructor" executed="True" result="Success" success="True" time="0.016" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Description" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailable_AllRoles" description="Tests the node is available when the current user has all of the node's roles" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailable_NoRoles" description="Tests the node is not available when the current user doesn't have any roles" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailable_SomeRoles" description="Tests the node is available when the current user has at least one of the node's roles" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailable_WrongRole" description="Tests the node is not available when the current user doesn't have any of the node's roles" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailableWithServiceRoles" description="Tests the node is available when the current user has at least one of the node's roles and one of the service's roles" executed="True" result="Success" success="True" time="0.016" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailableWithServiceRoles_NodeNotAvailable" description="Tests the node is not available when the current user has none of the node's roles, even if it has a service role" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.IsAvailableWithServiceRoles_ServiceNotAvailable" description="Tests the node is not available when the current user has none of the service's roles, even if it has a node role" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Parent" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadEmptyNode" executed="True" result="Success" success="True" time="0.000" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithChildren" executed="True" result="Success" success="True" time="0.000" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithDescription" executed="True" result="Success" success="True" time="0.000" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithRoles" executed="True" result="Success" success="True" time="0.000" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithService" executed="True" result="Success" success="True" time="0.016" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithServiceButNoActivatedType" executed="True" result="Success" success="True" time="0.000" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadNodeWithServiceRoles" executed="True" result="Success" success="True" time="0.000" asserts="7">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ReadToNode" description="Checks that a node can be read when the XmlReader isn't on a Node element" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Roles" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Schema" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.Text" executed="True" result="Success" success="True" time="0.000" asserts="4">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.ToStringMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Common.Windows.Test.Services.NodeTest.UIService" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Data" executed="True" result="Success" success="True" time="8.344" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="AccessLayer" executed="True" result="Success" success="True" time="8.047" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="8.047" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="PageContent" executed="True" result="Success" success="True" time="8.047" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="MetatagsDataAccessTest" executed="True" result="Success" success="True" time="3.672" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertMultipleTags_EmptyNameThrowsException" executed="True" result="Success" success="True" time="0.625" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertMultipleTagsForPage" executed="True" result="Success" success="True" time="1.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertSingleTag_AssignsId" executed="True" result="Success" success="True" time="0.500" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertSingleTag_EmptyNameThrowsException" executed="True" result="Success" success="True" time="0.484" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertSingleTag_NullPageIdThrowsException" executed="True" result="Success" success="True" time="0.547" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.InsertSingleTag_NullTagThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.RetrieveTagsForPage" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.UpdateMultipleTags_NullTagListThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.UpdateTagsForChildPages" executed="False" result="Ignored">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                        <reason>
                                          <message><![CDATA[]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.UpdateTagsForEntireHierarchy" executed="False" result="Ignored">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                        <reason>
                                          <message><![CDATA[]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.UpdateTagsForPagesOfType" executed="False" result="Ignored">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                        <reason>
                                          <message><![CDATA[]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.MetatagsDataAccessTest.UpdateTagsForSinglePage" executed="True" result="Success" success="True" time="0.500" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="Sprocs" executed="True" result="Success" success="True" time="4.375" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="MetatagDeleteTest" executed="True" result="Success" success="True" time="0.281" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagDeleteTest.InvalidIdLeavesTablesUnchanged" executed="True" result="Success" success="True" time="0.266" asserts="3">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagDeleteTest.NullTagIdThrowsSqlError" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="MetatagInsertTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.ExistingNameAndValueUsesExistingRow" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.ExistingNameUsesExistingNameRow" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NewNameInsertsNameRow" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NullDomainNameIdThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NullEnabledValueThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NullLanguageIdThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NullNameThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagInsertTest.NullPageIdThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="MetatagSelectByPageIdTests" executed="True" result="Success" success="True" time="1.203" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectByPageIdTests.InvalidPageIdReturnsNoRows" executed="True" result="Success" success="True" time="0.703" asserts="2">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectByPageIdTests.NullLanguageIdThrowsSqlError" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectByPageIdTests.NullPageIdThrowsSqlError" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectByPageIdTests.ValidPageIdWithNoTagsReturnsNoRows" executed="True" result="Success" success="True" time="0.500" asserts="1">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="MetatagSelectForFunctionalPageTest" executed="False" result="Ignored">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                        <reason>
                                          <message><![CDATA[]]></message>
                                        </reason>
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectForFunctionalPageTest.NullDomainNameThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectForFunctionalPageTest.NullPageNameThrowsSqlError" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectForFunctionalPageTest.PageWithNoTagsReturnsNoRows" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectForFunctionalPageTest.PageWithTagsReturnsRows" executed="False" result="Ignored">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="MetatagSelectTests" executed="True" result="Success" success="True" time="1.875" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectTests.NullDomainNameGuidThrowsSqlError" executed="True" result="Success" success="True" time="0.969" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagSelectTests.NullPageGuidThrowsSqlError" executed="True" result="Success" success="True" time="0.891" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="MetatagUpdateTest" executed="True" result="Success" success="True" time="1.000" asserts="0">
                                        <results>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagUpdateTest.NullPageIdThrowsSqlError" executed="True" result="Success" success="True" time="0.500" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                          <test-case name="AvisEurope.WebDev.Heracles.Data.AccessLayer.Test.PageContent.Sprocs.MetatagUpdateTest.NullTagIdThrowsSqlError" executed="True" result="Success" success="True" time="0.484" asserts="0">
                                            <categories>
                                              <category name="Integration" />
                                            </categories>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Export" executed="True" result="Success" success="True" time="0.266" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.266" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ColumnCollectionTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByNameEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByNameInCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByNameNoColumns" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByNameNotInCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByNameNullString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByPropertyEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByPropertyInCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByPropertyNoColumns" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByPropertyNotInCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindByPropertyNullName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindPrimaryKey" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnCollectionTest.ColumnCollection_FindPrimaryKeyNoPK" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ColumnTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenForeignKeyDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenIsNullableDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenIsPrimaryKeyDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenNameDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenObjectIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenPropertyDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenSqlTypeDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityNegativeWhenTableDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityPositive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityPositiveWhenForeignKeysBothNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityPostitiveBothTablesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.EqualityPostiveWhenPropertiesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.ToStringNullTable" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.ToStringTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ColumnTest.UseOldValueDefaultsToFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="DeltaRowFactoryTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.CannotCreateDeltaForUnknownType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.GenuineUpdateReturnsNonNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.NoDeltaReturnedIfNotMarkedDirty" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnDeltaForDelete" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnDeltaForInsert" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnDeltaForUpdateOfAllFields" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnDeltaForUpdateOfOneField" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnsDeltaForNonComparable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnsDeltaForNoOperation" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.DeltaRowFactoryTest.ReturnsDeltaForNoOperationFactoryField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ExceptionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ExceptionTests.TableTypeNotFoundException_EmptyConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ExceptionTests.TableTypeNotFoundException_InnerException" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ExceptionTests.TableTypeNotFoundException_StringConstructor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="FieldCollectionTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldCollectionTest.FindNullWhenColumnDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldCollectionTest.FindNullWhenColumnIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldCollectionTest.FindNullWhenNameDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldCollectionTest.FindsAFieldByColumnWhenItExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldCollectionTest.FindsAFieldByNameWhenItExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="FieldTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.ClonedFieldHasSameColumnInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.ClonedValueIsClonedIfCloneable" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.ClonedValueIsSameInstanceIfNotCloneable" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.CloneReturnsAnInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.ColumnIsSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.EqualityNegativeNullValue" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.EqualityNegativeWhenColumnDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.EqualityNegativeWhenValueDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.EqualityPositive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.EqualityPostiveWithNullColumns" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.TestToStringNullValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.FieldTest.ValueIsSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="PrimaryKeyFieldTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.PrimaryKeyFieldTest.ColumnIsAssignedByConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.PrimaryKeyFieldTest.ResetTheValueToOne" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.PrimaryKeyFieldTest.ValueIsIncrementedForEachNewInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ReplaceRowFactoryTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.ReplaceRowFactoryTest.DoesNotCreateRowForDeletedObjects" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="RowTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.CloneCopiesFields" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.CloneCopiesOperation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.CloneReturnsAnInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityNegativeWhenFieldCountDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityNegativeWhenFieldsDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityNegativeWhenOperationDiffers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityPositive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.EqualityPostiveWhenNoFields" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.RowTest.TestToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TableCollectionTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.EmptyConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.EnumerableParameterConstructor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.FindByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.FindByNameInvalidName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.FindByType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.FindByTypeInvalidType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableCollectionTest.FindByTypeNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TableFactoryTest" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.FindsATable" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.NoClassExists" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.NoTables" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.PopulatesTheTablePropertyOfAColumn" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.RequiresRootElementInMapping" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.SingleColumnTable" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.UseOldValueIsFalseWhenOmitted" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.UseOldValueIsFalseWhenSetInXml" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TableFactoryTest.UseOldValueIsTrueWhenSetInXml" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TablePopulatorTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.DelimitsGuidsWithSingleQuotes" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.DelimitsStringWithSingleQuotes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.DoesNotDelimitInts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_DeleteMulti" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_DeleteSingle" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_EmptyRowCollection" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_InsertMulti" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_InsertSingle" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_InsertSingleNullColumnValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_InsertSingleNullField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_NoRows" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_NullRows" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TablePopulatorTests.Populate_UpdateSingle" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TempTableGeneratorDropTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorDropTests.ReturnsMultipleStatementsForMultipleTables" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorDropTests.ReturnsNullWhenNoTables" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorDropTests.ReturnsSingleStatementForOneTable" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TempTableGeneratorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorTests.Generate_MultipleTables" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorTests.Generate_NoColumns" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorTests.Generate_NoTables" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.Data.Export.Test.TempTableGeneratorTests.Generate_SourceTablesPropertyGetter" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="DomainObjects" executed="True" result="Success" success="True" time="0.109" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.109" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Core" executed="True" result="Success" success="True" time="0.047" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="IdentityTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.IdentityTest.AssignedWhenValueIsSetToNonNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.IdentityTest.AssignedWhenValuePassedToCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.IdentityTest.UnassignedThruDefaultCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.IdentityTest.UnassignedWhenNullPassedToCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.IdentityTest.UnassignedWhenValueIsSetToNull" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SelfManagedPersistenceStateTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.ChangedDoesNotChangeStateWhenDeletedAndNew" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.ChangedDoesNotChangeStateWhenDeletedAndOld" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.ChangedDoesNotChangeStateWhenNew" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.ChangedSetsStateToUpdateWhenOld" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.DeleteSetsStateToDeletedWhenOld" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.DeleteSetsStateToNoneWhenNew" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.StateDefaultsToNoneWhenOld" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.StateIsInsertWhenNewAndChanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.SelfManagedPersistenceStateTest.StateIsNoneWhenNewButNotChanged" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Validation" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="BaseValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.BaseValidatorTests.Validate" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.BaseValidatorTests.Validate_NoRules" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ValidationResultTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.ValidationResultTests.AddError" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.ValidationResultTests.AddErrorEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.ValidationResultTests.AddErrorNullString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.ValidationResultTests.IsValid_NoErrors" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Core.Validation.ValidationResultTests.IsValid_WithError" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Globalisation" executed="True" result="Success" success="True" time="0.031" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="LanguageTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Globalisation.LanguageTest.ContainsTheLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Globalisation.LanguageTest.EqualityToNullIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Globalisation.LanguageTest.InstancesWithDifferingLanguageIdAreNotEqual" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Globalisation.LanguageTest.InstancesWithTheSameLanguageIdAreEqual" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Locations" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="CountryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Locations.CountryTests.CanDetermineTheDefaultCurrency" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Locations.CountryTests.ContainsAListOfCurrencies" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Metatags" executed="True" result="Success" success="True" time="0.031" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="MetatagTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.Delete" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.GetEnabled" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.GetText" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetEnabled_DifferentValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetEnabled_SameValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetName_DifferentValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetName_EmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetName_NullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetName_SameValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_EmptyContentEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_EmptyContentNullValue" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_EmptyContentPopulatedValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_NullContentEmptyValue" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_NullContentNullValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_NullContentPopulatedValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_PopulatedContentDifferentValue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_PopulatedContentEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_PopulatedContentEqualValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                  <test-case name="AvisEurope.WebDev.Heracles.DomainObjects.Test.Metatags.MetatagTests.SetText_PopulatedContentNullValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="1.172" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Merchandising" executed="True" result="Success" success="True" time="1.172" asserts="0">
                        <results>
                          <test-suite type="SetUpFixture" name="Test" executed="True" result="Success" success="True" time="1.172" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="CmsUsers" executed="True" result="Success" success="True" time="0.234" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="CmsUserServiceTest" executed="True" result="Success" success="True" time="0.219" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.FilterLanguagesByUserAndDomain" executed="True" result="Success" success="True" time="0.156" asserts="25">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.FiltersOutNonUserLangaugesFromAnExistingList" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.GetAllUsers" executed="True" result="Success" success="True" time="0.047" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.GetUserLanguageNames" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.GetUserRoleNames" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.CmsUserServiceTest.SynchroniseRoles" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="IdentificationServiceTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.CannotDetermineIfCurrentUserHasLanguageWhenUserIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.CannotDetermineIfUserHasLanguageWhenLanguageIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.DeterminesIfAUserHasALanguage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.DeterminesIfAUserHasntGotALanguage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.DeterminesIfUserHasntGotRole" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.DeterminesIfUserHasRole" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.ErrorWhenCHeckForRoleIfCurrentUserNotAssigned" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.CmsUsers.IdentificationServiceTest.ErrorWhenCheckingForNullRole" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Content" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="DomainNameServiceTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.DomainNameServiceTest.GetDefaultDomainIndex" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="HierarchyServiceTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.HierarchyServiceTest.IsNotASharedHierarchyWhenNoDomains" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.HierarchyServiceTest.IsNotSharedWhenOneDomain" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.HierarchyServiceTest.IsSharedWhenTwoOrMoreDomains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.HierarchyServiceTest.ThrowsExceptionIfDomainsCollectionIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Content.HierarchyServiceTest.ThrowsExceptionIfHierarchyIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Extras" executed="True" result="Success" success="True" time="0.469" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ExtrasAssemblerTest" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.AttachesBlackoutsToExtras" executed="True" result="Success" success="True" time="0.031" asserts="5">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.AttachesTextsToExtras" executed="True" result="Success" success="True" time="0.016" asserts="50">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CannotCreateAnExtraBlackoutFromANullRow" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CannotCreateExtraFromANullRow" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CannotCreateExtraTextFromNullRow" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreateExtraDataCorrectlyDealsWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtraBlackoutDataFromADataRow" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtraBlackoutDataFromAnExtraBlackout" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtrasDataFromExtraDomain" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtraTextDataCorrectlyHandlesNulls" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtraTextDataFromADataRow" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesAnExtraTextDataFromAnExtraText" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasAssemblerTest.CreatesExtraDataFromDataRow" executed="True" result="Success" success="True" time="0.016" asserts="17" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ExtrasServiceTest" executed="True" result="Success" success="True" time="0.391" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.AddNewCategory" executed="True" result="Success" success="True" time="0.109" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.CachesExtraCategories" executed="True" result="Success" success="True" time="0.109" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.CreatesAListOfAllTheGroupsInTheData" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.CreatesLocationsWithNoExtras" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.CreatesTheUnassignedGroup" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.DoesNotCreateDuplicateGroups" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.ExtrasAreConnectedToLocations" executed="True" result="Success" success="True" time="0.000" asserts="13">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.GetAllExtras" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.GetCategories" executed="True" result="Success" success="True" time="0.141" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.LocationsAreConnectedToWizardRegions" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Extras.ExtrasServiceTest.WizardRegionsAreConnectedToGroups" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Fleet" executed="True" result="Success" success="True" time="0.203" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="DomainRateCodeWriterTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DomainRateCodeWriterTest.CreateDeltaListsForUpdatedRateCodes" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DomainRateCodeWriterTest.CreatesAnEmptyListWhenThereAreNoRateCodes" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DomainRateCodeWriterTest.CreatesDeltaListForDeletedRateCodes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DomainRateCodeWriterTest.CreatesDeltaListForNewRateCodes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="DriverAgeTextWriterTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeTextWriterTest.CreateDeltaListsForUpdatedDriverAgeText" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeTextWriterTest.CreatesAnEmptyListWhenThereAreNoDriverAgeTexts" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeTextWriterTest.CreatesDeltaListForDeletedDriverAgeText" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeTextWriterTest.CreatesDeltaListForNewDriverAgeText" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeTextWriterTest.DoesNotCreateDeltaForEmptyInserts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="DriverAgeWriterTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeWriterTest.CreateDeltaListsForUpdatedDriverAge" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeWriterTest.CreatesAnEmptyListWhenThereAreNoDriverAges" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeWriterTest.CreatesDeltaListForDeletedDriverAge" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.DriverAgeWriterTest.CreatesDeltaListForNewDriverAge" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="FleetBatchActionReplaceTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionReplaceTest.GetReplacementLocationXml" executed="True" result="Success" success="True" time="0.016" asserts="7" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionReplaceTest.GetReplacementLocationXsdSettings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionReplaceTest.ValidateReplacementLocationXml" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="FleetBatchActionTest" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.CreateFleetDeltas" executed="True" result="Success" success="True" time="0.047" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.CreateLocationIdDeltas" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.CreateSqlExecuteStoredProcedureStatement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.CreateTables" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.Generate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.GenerateCleanUpStatements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.GenerateDeltaReport" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.GenerateTempTableStatements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.LoadXmlTableStructure" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchActionTest.ValidateXmlForTempTableStructure" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="FleetBatchTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.FleetBatchTest.CreateRowFactory" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="LfmilWriterTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.LfmilWriterTest.CreateDeltaListsForUpdatedFleet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.LfmilWriterTest.CreatesAnEmptyListWhenThereIsNoFleet" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.LfmilWriterTest.CreatesDeltaListForDeletedFleet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.LfmilWriterTest.CreatesDeltaListForNewFleet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="LocationIdWriterTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.LocationIdWriterTest.WritesLocationIdFromOldValues" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ReservationCommentsTextWriterTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsTextWriterTest.CreateDeltaListsForUpdatedComments" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsTextWriterTest.CreatesAnEmptyListWhenThereAreNoComments" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsTextWriterTest.CreatesDeltaListForDeletedComments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsTextWriterTest.CreatesDeltaListForNewComments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ReservationCommentsWriterTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsWriterTest.CreateDeltaListsForUpdatedComments" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsWriterTest.CreatesAnEmptyListWhenThereAreNoComments" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsWriterTest.CreatesDeltaListForDeletedComments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Fleet.ReservationCommentsWriterTest.CreatesDeltaListForNewComments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Globalisation" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="CurrencyAssemblerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Globalisation.CurrencyAssemblerTests.Load" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Globalisation.CurrencyAssemblerTests.Load_CriteriaNotInt" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Globalisation.CurrencyAssemblerTests.Load_InvalidId" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Globalisation.CurrencyAssemblerTests.Load_NullCriteria" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Globalisation.CurrencyAssemblerTests.LoadForCountry" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Locations" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="CountryAssemblerTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.CannotCreateACountryDataFromNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.CreatesACountryDataFromARow" executed="True" result="Success" success="True" time="0.016" asserts="6">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.LazyLoad" executed="True" result="Success" success="True" time="0.000" asserts="3">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.Load" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.Load_CriteriaNotInt" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.Load_InvalidId" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryAssemblerTests.Load_NullCriteria" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="CountryServiceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryServiceTests.GetCountryById" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Locations.CountryServiceTests.GetCountryById_NegativeId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="MyTasks" executed="True" result="Success" success="True" time="0.125" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="CmsIgnoredTaskServiceTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.MyTasks.CmsIgnoredTaskServiceTest.ReturnsEmptyArrayWhenNoneIgnored" executed="True" result="Success" success="True" time="0.000" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.MyTasks.CmsIgnoredTaskServiceTest.SaveAndReadBack" executed="True" result="Success" success="True" time="0.063" asserts="2">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MissingFleetLocationsServiceTest" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.MyTasks.MissingFleetLocationsServiceTest.GetLocationsMissingFleet" executed="True" result="Success" success="True" time="0.063" asserts="0">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MissingTranslationsServiceTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.MyTasks.MissingTranslationsServiceTest.GetMissingTranslations" executed="True" result="Success" success="True" time="0.000" asserts="1">
                                        <categories>
                                          <category name="Integration" />
                                        </categories>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="Namespace" name="Resources" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ResourceServiceTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Resources.ResourceServiceTest.GetsNullWhenTheSpecifiedTranslationDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="AvisEurope.WebDev.Heracles.Services.Merchandising.Test.Resources.ResourceServiceTest.GetsTheSpecifiedTranslationForAGivenLanguageId" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Namespace" name="BusinessObjects" executed="True" result="Success" success="True" time="0.188" asserts="0">
        <results>
          <test-suite type="Namespace" name="IntegrationTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CustomerTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.188" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CommonConverterTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.CommonConverterTest.GetWizardCompliantCreditCardNumberTest" executed="True" result="Success" success="True" time="0.031" asserts="3">
                    <categories>
                      <category name="Integration" />
                    </categories>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CustomerCdbProfileTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
              <test-suite type="TestFixture" name="CustomerCreditCardTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.CreditCardTransformReturnsValidCreditCard" executed="True" result="Success" success="True" time="0.016" asserts="3">
                    <categories>
                      <category name="Integration" />
                    </categories>
                  </test-case>
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.First6AndLast4DigitsOf13DigitCreditCardUnmasked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.First6AndLast4DigitsOf15DigitCreditCardUnmasked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.First6AndLast4DigitsOf16DigitCreditCardUnmasked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.IsValidForCheckoutReturnsFalseForEmptyCreditCardNo" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.IsValidForCheckoutReturnsFalseForExpiryDateInPast" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.IsValidForCheckoutReturnsFalseForNullCreditCard" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.IsValidForCheckoutReturnsFalseForNullExpiryDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.OnlyLast4DigitsOf13DigitCreditCardUnmasked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.OnlyLast4DigitsOf16DigitCreditCardUnmasked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.CustomerCreditCardTest.ValidCardNumberAndFutureExpiryDateIsValidForCheckout" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DomainLanguageSpecificTextTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.DomainLanguageSpecificTextTest.TextDoesNotShowDetailwhenAppSettingIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4">
                    <categories>
                      <category name="Integration" />
                    </categories>
                  </test-case>
                  <test-case name="BusinessObjects.Test.DomainLanguageSpecificTextTest.TextDoesNotShowDetailwhenAppSettingIsNotDefined" executed="True" result="Success" success="True" time="0.000" asserts="4">
                    <categories>
                      <category name="Integration" />
                    </categories>
                  </test-case>
                  <test-case name="BusinessObjects.Test.DomainLanguageSpecificTextTest.TextDoesShowDetailwhenAppSettingIsTrue" executed="True" result="Success" success="True" time="0.000" asserts="4">
                    <categories>
                      <category name="Integration" />
                    </categories>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DrivingLicenseTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.DrivingLicenseTest.ShouldFormatDrivingLicenseNumberToHoldAlphaNumericsOnly" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LocationMnemonicHelperTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.LocationMnemonicHelperTests.GetDropOff_PrimaryVehicleBookingLocationMatchesProductParametersPUL_ReturnsProductParametersDOL" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="BusinessObjects.Test.LocationMnemonicHelperTests.GetDropOff_PrimaryVehicleIsAtGhostLocationAndProductParametersPULDoesNotMatchDOL_ReturnsProductParametersDOL" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.LocationMnemonicHelperTests.GetDropOff_PrimaryVehicleIsAtGhostLocationAndProductParametersPULMatchesDOL_ReturnsGhostLocation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.LocationMnemonicHelperTests.GetPickUp_PrimaryVehicleBookingLocationMatchesProductParametersPickUpLocation_ReturnsSharedStationMnemonic" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.LocationMnemonicHelperTests.GetPickUp_PrimaryVehicleIsAtGhostLocation_ReturnsGhostLocation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ProductTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.ProductTests.CalculatedSellingPriceReturnedWhenCalculatedSellingPriceIsLessThanMaxSellingPrice" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="BusinessObjects.Test.ProductTests.MaxSellingPriceReturnedWhenCalculatedSellingPriceIsGreaterThanMaxSellingPrice" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.ProductTests.SellingPriceIsEqualToUnitPriceWhenPricingRateIsRental" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="QuotesHelperTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="BusinessObjects.Test.QuotesHelperTests.NumberOfQuotesReturnedIsNotChangedWhenPrepayIsSupported" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="BusinessObjects.Test.QuotesHelperTests.PrepayQuoteRemovedFromQuotesListWhenPrepayIsNotSupported" executed="False" result="Ignored">
                    <categories>
                      <category name="Integration" />
                    </categories>
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-case name="BusinessObjects.Test.QuotesHelperTests.QuoteListUnchangedWhenPrepayRateIsNotPresentAndIsNotSupported" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Rules" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="PasswordRuleTest" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.ConstructorTest" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenExceptionTest" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenPasswordNoDigitTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenPasswordNoLowerCaseTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenPasswordNoUpperCaseTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenPasswordTooShort" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="BusinessObjects.Test.Rules.PasswordRuleTest.IsBrokenValidPasswordTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Namespace" name="Core" executed="True" result="Failure" success="False" time="27.485" asserts="0">
        <results>
          <test-suite type="Namespace" name="Test" executed="True" result="Failure" success="False" time="27.485" asserts="0">
            <results>
              <test-suite type="Namespace" name="BusinessObjects" executed="True" result="Success" success="True" time="9.297" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Isis" executed="True" result="Success" success="True" time="2.734" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Mappers" executed="True" result="Success" success="True" time="2.719" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="DomainMapperTests" executed="True" result="Success" success="True" time="2.359" asserts="0">
                            <results>
                              <test-case name="Core.Test.BusinessObjects.Isis.Mappers.DomainMapperTests.CanMapDomain" executed="True" result="Success" success="True" time="2.344" asserts="7" />
                              <test-case name="Core.Test.BusinessObjects.Isis.Mappers.DomainMapperTests.CannotPassNullDomainToMapper" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ExtrasMapperTests" executed="True" result="Success" success="True" time="0.359" asserts="0">
                            <results>
                              <test-case name="Core.Test.BusinessObjects.Isis.Mappers.ExtrasMapperTests.CanMapFleetResponseWithExtras" executed="True" result="Success" success="True" time="0.359" asserts="8" />
                              <test-case name="Core.Test.BusinessObjects.Isis.Mappers.ExtrasMapperTests.CanMapFleetResponseWithNoExtras" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Core.Test.BusinessObjects.Isis.Mappers.ExtrasMapperTests.DoesNotMapUnavailableExtrasFromFleetResponse" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="BookingSourceProcessTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                          <test-suite type="TestFixture" name="FleetServiceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.BusinessObjects.Isis.Services.FleetServiceTests.FleetServiceHasAMethodGetWizardRateRelate" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.BusinessObjects.Isis.Services.FleetServiceTests.NewFleetParametersIncludeGhostLocations" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="OnRequestStatsServiceTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="6.563" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Adapters" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="NodeAdapterTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="BusinessLogic" executed="True" result="Success" success="True" time="5.094" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="APBusinessValidationTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                          <test-suite type="TestFixture" name="LuhnCheckerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.BusinessObjects.Test.BusinessLogic.LuhnCheckerTests.CanCreateLuhnChecker" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.BusinessObjects.Test.BusinessLogic.LuhnCheckerTests.CanValidateNumber" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="LuhnNumberGeneratorTests" executed="True" result="Success" success="True" time="5.078" asserts="0">
                            <results>
                              <test-case name="Core.Test.BusinessObjects.Test.BusinessLogic.LuhnNumberGeneratorTests.CanGenerateNumberThatPassesLuhnCheck" executed="True" result="Success" success="True" time="5.078" asserts="100">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CarHireLineItemTests" executed="True" result="Success" success="True" time="0.297" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.AddCreditCardInformationSetsAVCForAvisAccount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.AddCreditCardInformationSetsDetailsForMasterCards" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.AddCreditCardInformationSetsDetailsForVisa" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.APUIsAttatchedToRemarksForGermanAutoRentStationsIfCustomerIsPreferredAndAutoRentEnabled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.buildPriceLabelReturnsCorrectLabelWhenUseBasePriceIsFalse" executed="True" result="Success" success="True" time="0.125" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.buildPriceLabelReturnsCorrectLabelWhenUseBasePriceIsFalseEUR" executed="True" result="Success" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.buildPriceLabelReturnsCorrectLabelWhenUseBasePriceIsTrue" executed="True" result="Success" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.buildPriceLabelReturnsCorrectLabelWhenUseBasePriceIsTrueEUR" executed="True" result="Success" success="True" time="0.047" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.IfReservationRemarksAndPromotionRemarksAreToLongAPUIsAttatchedToRemarksForGermanAutoRentStationsIfCustomerIsPreferredAndAutoRentEnabled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.IfReservationRemarksAreToLongAPUIsAttatchedToRemarksForGermanAutoRentStationsIfCustomerIsPreferredAndAutoRentEnabled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CarHireLineItemTests.NAPUIsAttatchedToRemarksForGermanAutoRentStationsIfCustomerIsPreferredAndAutoRentDisabled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CustomerCreditCardEqualityComparerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentCardNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentCardNumberByLength" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentCardType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentEndMonth" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentEndYear" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsFalseWhenCreditCardsHaveDifferentHiddenCardNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsTrueWhenCreditCardsAreSame" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.CustomerCreditCardEqualityComparerTests.ReturnsTrueWhenCreditCardsAreSameConsideringHiddenCreditCardNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CustomerTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                      <test-suite type="TestFixture" name="DtoRepositoryIntegrationTests" executed="True" result="Success" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.DtoRepositoryIntegrationTests.CanGetNonNullRentalLocationDto" executed="True" result="Success" success="True" time="0.094" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.DtoRepositoryIntegrationTests.CanGetRentalLocationDtosWithHolidayInfoPopulatedForAtLeastSomeRentalLocations" executed="True" result="Success" success="True" time="0.047" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.DtoRepositoryIntegrationTests.CanGetRentalLocationDtosWithOpeningHoursPopulatedForAllRentalLocations" executed="True" result="Success" success="True" time="0.047" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="NodeRepositoryTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.NodeRepositoryTests.CanGetNode" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PermanentContentResourceConstantsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.PermanentContentResourceConstantsTests.ChangeToRentalInvoiceHyperLinkGuidMustBeReplicatedInDatabase" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RentalLocationDateValidationResultTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationDateValidationResultTests.ErrorOfNoneIndicatesValid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RentalLocationDateValidatorTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationDateValidatorTests.HolidayReturnedWhenRentalDropOffOccursDuringHoliday" executed="True" result="Success" success="True" time="0.094" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationDateValidatorTests.HolidayReturnedWhenRentalOccursDuringHoliday" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationDateValidatorTests.NoHolidayReturnedWhenRentalDoesNotOccurDuringHoliday" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationDateValidatorTests.NoHolidayReturnedWhenRentalDropOffDoesNotOccurDuringHoliday" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RentalLocationRepositoryTests" executed="True" result="Success" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.CanCreateProvider" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.CanGetAllStationsUnderANode" executed="True" result="Success" success="True" time="0.094" asserts="4">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.CanSearchForALocation" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.InvalidStationMnemonicShouldNotResultInAnyNullRentalStationsBeingReturned" executed="True" result="Success" success="True" time="0.016" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.SearchingForAValidLocationReturnsAListOfStationDetailsWithAtLeastOneEntry" executed="True" result="Success" success="True" time="0.031" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.SearchingForAValidLocationReturnsAtLeastOneStationWithTheRightRegion" executed="True" result="Success" success="True" time="0.016" asserts="2">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationRepositoryTests.SearchingForAValidLocationReturnsNonNullResult" executed="True" result="Success" success="True" time="0.016" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RentalLocationTests" executed="True" result="Success" success="True" time="0.594" asserts="0">
                        <results>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationTests.FalseReturnedForNoLocation" executed="True" result="Success" success="True" time="0.500" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationTests.GettingRentalLocationDelegatesToRentalLocationRepository" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationTests.GettingRentalLocationReturnsACorrectlyPopulatedRentalLocation" executed="True" result="Success" success="True" time="0.016" asserts="56">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationTests.LocationLondonHeathrowIsWithinEMEADivision" executed="True" result="Success" success="True" time="0.031" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.BusinessObjects.Test.RentalLocationTests.LocationSydneyAirportIsNotWithinEMEADivision" executed="True" result="Success" success="True" time="0.031" asserts="1">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="CdbConversion" executed="True" result="Success" success="True" time="0.094" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Converter" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="BusinessObjectHelperTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Core.Test.CdbConversion.Converter.BusinessObjectHelperTests.GetPhoneNumberByTypeReturnPhoneWhenRequiredTypeIsFound" executed="True" result="Success" success="True" time="0.094" asserts="1" />
                          <test-case name="Core.Test.CdbConversion.Converter.BusinessObjectHelperTests.GetPhoneNumberByTypeReturnsNullWhenCustomerPhoneIsNotOfTypeRequired" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.CdbConversion.Converter.BusinessObjectHelperTests.GetPhoneNumberByTypeReturnsNullWhenCustomerPhoneIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="GapCustomerToWizardMemberConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Core.Test.CdbConversion.GapCustomerToWizardMemberConverterTests.IsAirPlusProfileFlagIsFalseWhenAirPlusNumberIsEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.CdbConversion.GapCustomerToWizardMemberConverterTests.IsAirPlusProfileFlagIsFalseWhenAirPlusNumberIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.CdbConversion.GapCustomerToWizardMemberConverterTests.IsAirPlusProfileFlagIsFalseWhenAirPlusNumberOnlyContainsWhiteSpaces" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.CdbConversion.GapCustomerToWizardMemberConverterTests.IsAirPlusProfileFlagIsTrueWhenAirPlusNumberExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="0.375" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Utilities" executed="True" result="Success" success="True" time="0.375" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.359" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="PerformanceCountersTests" executed="True" result="Success" success="True" time="0.359" asserts="0">
                            <results>
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Adding_Category_Sets_CategoryName_On_Each_PerformanceCounter_To_Name_Of_Containing_Category" executed="True" result="Success" success="True" time="0.078" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Can_Request_Timer" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Can_Setup_PerformanceCounters" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Can_Submit_Stopwatch_To_PerformanceCounter" executed="True" result="Success" success="True" time="0.094" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Does_Not_Exist_Then_Setup_Creates_Category_And_All_Counters" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Exists_And_All_Counters_Exist_Then_Setup_Does_Not_Delete_Category" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Exists_And_All_Counters_Exist_Then_Setup_Does_Not_Recreate_Category" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Exists_But_Some_Counters_Are_Missing_Then_Setup_Deletes_Category" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Exists_But_Some_Counters_Are_Missing_Then_Setup_Recreates_Category_And_All_Counters" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Category_Exists_Then_Setup_Checks_If_Any_Counters_Missing" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.If_Setup_Of_Any_Category_Fails_Then_PerformanceCounterSetupException_Thrown" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Counter_That_Exists_And_That_Is_In_Added_Category_Does_Not_Return_NullStandardPerformanceCounter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Counter_That_Has_Been_Setup_Will_Not_Return_NullStandardPerformanceCounter" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Counter_That_Has_Not_Been_Setup_Will_Return_NullStandardPerformanceCounter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Counter_That_Is_In_Added_Category_But_Does_Not_Exist_Returns_NullStandardPerformanceCounter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Timer_That_Does_Not_Exist_Returns_NullPerformanceTimer" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Request_For_Timer_That_Exists_And_Is_In_Added_Category_Does_Not_Return_NullPerformanceTimer" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Setup_Checks_If_Category_Exists" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Common.Utilities.Test.PerformanceCountersTests.Submitting_Running_Stopwatch_Causes_ArgumentException" executed="True" result="Success" success="True" time="0.094" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Data" executed="True" result="Success" success="True" time="0.281" asserts="0">
                <results>
                  <test-suite type="Namespace" name="RDF" executed="True" result="Success" success="True" time="0.281" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Core" executed="True" result="Success" success="True" time="0.188" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="ConnectionStringProviderTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                          <test-suite type="Namespace" name="Mappers" executed="True" result="Success" success="True" time="0.031" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="CriteriaDbRegistryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Data.RDF.Core.Mappers.CriteriaDbRegistryTests.GetsCorrectDbForCriteria" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="CriteriaParametersRegistryTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Data.RDF.Core.Mappers.CriteriaParametersRegistryTests.CanMapFromCriteriaToAListOfParameters" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                  <test-case name="Core.Test.Data.RDF.Core.Mappers.CriteriaParametersRegistryTests.MappingFromACriteriaToAListOfParametersAsksTheTypeDbTypeRegistryForTheDbTypeForEachCriteriaProperty" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="CriteriaStoredProcedureRegistryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Data.RDF.Core.Mappers.CriteriaStoredProcedureRegistryTests.CanMapToSprocName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TypeDbTypeRegistryTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Repositories" executed="True" result="Success" success="True" time="0.141" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="DtoRepositoryTests" executed="True" result="Success" success="True" time="0.141" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryAsksCriteriaDbRegistryForTheDb" executed="True" result="Success" success="True" time="0.109" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryAsksCriteriaForMapper" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryAsksCriteriaParametersRegistryForAListOfSqlParameters" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryAsksCriteriaStoredProcedureRegistryForSprocName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryInvokesCallToCorrectSprocWithCorrectParametersAndConnectionString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryMapsDataSetReturnedFromInvoker" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                                  <test-case name="Core.Test.Data.RDF.Core.Repositories.DtoRepositoryTests.GettingARentalLocation_RepositoryReturnsResultFromInvoker" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="StoredProcedureInvokerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.Core.StoredProcedureInvokerTests.CanInvokeStoredProcedure" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Criterias" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="IsisLocationSelectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.Criterias.IsisLocationSelectTests.InvokingStoredProcedureReturnsCorrectlyPopulatedRentalLocationData" executed="True" result="Success" success="True" time="0.016" asserts="61">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="LocationSelectForNodeTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.Criterias.LocationSelectForNodeTests.InvokingStoredProcedureReturnsCorrectlyPopulatedData" executed="True" result="Success" success="True" time="0.016" asserts="8">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="LocationSelectTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.Criterias.LocationSelectTests.InvokingStoredProcedureReturnsCorrectlyPopulatedRentalLocationData" executed="True" result="Success" success="True" time="0.000" asserts="61">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="SearchLocationOnKeywordTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.Criterias.SearchLocationOnKeywordTests.InvokingStoredProcedureReturnsCorrectlyPopulatedData" executed="True" result="Success" success="True" time="0.063" asserts="11">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="DataSetToDtoMappers" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="LocationSelectForNodeDataSetMapperTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.Data.RDF.DataSetToDtoMappers.LocationSelectForNodeDataSetMapperTests.RowsWithNullLocationTypeIdsAreIgnored" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="NodeSelectByGuidDataSetMapperTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="DataAccessTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                <results>
                  <test-suite type="Namespace" name="RefrackDalTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ConditionCaptionTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                      <test-suite type="TestFixture" name="ConditionSectionTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                      <test-suite type="TestFixture" name="CountryTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Emails" executed="True" result="Failure" success="False" time="0.328" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Tests" executed="True" result="Failure" success="False" time="0.328" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="ActivateAccount" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="ActivateAccountHtmlEmailTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                            <results>
                              <test-case name="Core.Test.Emails.Tests.ActivateAccount.ActivateAccountHtmlEmailTests.GetEmailReturnsHtmlWithTagsSubstitutedWithEmailData" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.Emails.Tests.ActivateAccount.ActivateAccountHtmlEmailTests.InstanceCreatedSuccessfully" executed="True" result="Success" success="True" time="0.078" asserts="0">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                              <test-case name="Core.Test.Emails.Tests.ActivateAccount.ActivateAccountHtmlEmailTests.SendActivateAccountHtmlEmail" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.Emails.Tests.ActivateAccount.ActivateAccountHtmlEmailTests.SendActivateAccountTextEmail" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="AvisPreferred" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="AvisPreferredEmailTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="BookingConfirmation" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="BookingConfirmationEmailTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="CancellationConfirmation" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="CancellationConfirmationTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="EmailTemplateTests" executed="True" result="Failure" success="False" time="0.141" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="EmailDataTests" executed="True" result="Failure" success="False" time="0.141" asserts="0">
                            <results>
                              <test-case name="Core.Test.Emails.Tests.EmailTemplateTests.EmailDataTests.SubstitutionOfDataIsDoneSuccessfully" executed="True" result="Error" success="False" time="0.109" asserts="0">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <failure>
                                  <message><![CDATA[NVelocity.Exception.ResourceNotFoundException : Unable to find resource 'Emails.Tests\EmailTemplateTests\TestTemplate.html']]></message>
                                  <stack-trace><![CDATA[at NVelocity.Runtime.Resource.ResourceManagerImpl.LoadResource(String resourceName, ResourceType resourceType, String encoding)
at NVelocity.Runtime.Resource.ResourceManagerImpl.GetResource(String resourceName, ResourceType resourceType, String encoding)
at NVelocity.Runtime.RuntimeInstance.GetTemplate(String name, String encoding)
at NVelocity.Runtime.RuntimeInstance.GetTemplate(String name)
at NVelocity.App.VelocityEngine.GetTemplate(String name)
at AvisEurope.WebDev.Heracles.Common.Email.EmailBodyProvider.TemplateRenderer.GetEmailBody(Boolean isHtml) in D:\Development\Development\Core\Common.Email\EmailBodyProvider\TemplateRenderer.cs:line 35
at Core.Test.Emails.Tests.EmailTemplateTests.EmailDataTests.SubstitutionOfDataIsDoneSuccessfully() in D:\Development\Development\Core\Core.Test\Emails.Tests\EmailTemplateTests\EmailDataTests.cs:line 45
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Core.Test.Emails.Tests.EmailTemplateTests.EmailDataTests.TestEmailDataIsConvertedToDictionarySuccessfully" executed="True" result="Success" success="True" time="0.016" asserts="6">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="OnRequestBookingConfirmation" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="OnRequestBookingConfirmationTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.Emails.Tests.OnRequestBookingConfirmation.OnRequestBookingConfirmationTests.OnRequest_Confirmation_Email_can_be_created" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="UsSurveyEmail" executed="True" result="Success" success="True" time="0.047" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="UsSurveyEmailTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Core.Test.Emails.Tests.UsSurveyEmail.UsSurveyEmailTests.UsBooking_Survey_Email_can_be_created" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Emails.Tests.UsSurveyEmail.UsSurveyEmailTests.UsBooking_Survey_Email_is_created_with_customers_name" executed="True" result="Success" success="True" time="0.047" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Interfaces" executed="True" result="Success" success="True" time="0.938" asserts="0">
                <results>
                  <test-suite type="Namespace" name="CommerceEngine" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Formatting" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AddressLineFormatterFactoryTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                              <test-suite type="TestFixture" name="AddressLineFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Interfaces.CommerceEngine.Test.Formatting.AddressLineFormatterTests.RemoveSpacesThrowsAnNullReferenceExceptionForNullArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Interfaces.CommerceEngine.Test.Formatting.AddressLineFormatterTests.WhenAddressLine3LengthIsGreaterThan30CityNameIsAbbreviated" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="AllCountriesAddressLine3FormatterTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ReservationFactoryTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.Interfaces.CommerceEngine.Test.ReservationFactoryTests.WizardGatewayExtendedExceptionIsRethrownInsteadGenericException" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="WizardMemberToCdbProfileInfoObjectConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.Interfaces.CommerceEngine.Test.WizardMemberToCdbProfileInfoObjectConverterTests.WhenDrivingLicenceCountryCodeIsNullAppendLocationToDrivingLicenceReturnsDrivingLicenceNumber" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Crud" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CustomerCrudTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Core.Test.Interfaces.Crud.CustomerCrudTests.CustomerAirPlusNumberIsSetOnRetrieveFromDb" executed="True" result="Success" success="True" time="0.078" asserts="1" />
                          <test-case name="Core.Test.Interfaces.Crud.CustomerCrudTests.CustomerWizardCardSeriesIsSetToEmptyStringForNullDbRowData" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Interfaces.Crud.CustomerCrudTests.CustomerWizardNumberIsSetToEmptyStringForNullDbRowData" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Interfaces.Crud.CustomerCrudTests.ParametersListToSaveCustomerSetsParameterAirPlusNumber" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Email" executed="True" result="Success" success="True" time="0.797" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Documents" executed="True" result="Success" success="True" time="0.797" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.797" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="EmailDocumentTests" executed="True" result="Success" success="True" time="0.797" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Interfaces.Email.Documents.Tests.EmailDocumentTests.CanSerializeEmailDocument" executed="True" result="Success" success="True" time="0.797" asserts="0" />
                                  <test-case name="Core.Test.Interfaces.Email.Documents.Tests.EmailDocumentTests.EmailDocumentIdIsSetWhenAnInstanceIsCreated" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Interfaces.Email.Documents.Tests.EmailDocumentTests.EmailDocumentSupportsToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Interfaces.Email.Documents.Tests.EmailDocumentTests.MandatoryParametersAreProvidedToEmailDocumentConstructor" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="EmailMessageProcessorTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Isis" executed="True" result="Failure" success="False" time="0.813" asserts="0">
                <results>
                  <test-suite type="Namespace" name="BusinessObjects" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="Objects" executed="True" result="Success" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.AccessoriesCollection" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.Agent_object_and_properties" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.Distance_object_and_properties" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.Error_object_and_properties" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.ExpiryDate" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.ExpiryDate_with_invalid_numeric_values" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.ExpiryDate_with_invalid_string" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.ExpiryDate_with_invalid_string_values" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.ExpiryDate_with_null" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.LocationAddress" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.NoShowFee" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.NoShowFee_invalid" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.OpeningHours" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.Total" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.BusinessObjects.Objects.TotalPricePerDay" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Core" executed="True" result="Success" success="True" time="0.313" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Extensions" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="StringExtensionsTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Wizard" executed="True" result="Success" success="True" time="0.313" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="InsuranceProductTests" executed="True" result="Success" success="True" time="0.313" asserts="0">
                            <results>
                              <test-case name="Core.Test.Isis.Core.Wizard.InsuranceProductTests.Super_Cover_is_not_recognised_for_British_destinations" executed="True" result="Success" success="True" time="0.313" asserts="1" />
                              <test-case name="Core.Test.Isis.Core.Wizard.InsuranceProductTests.Super_Cover_is_not_recognised_when_options_do_not_match" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Isis.Core.Wizard.InsuranceProductTests.Super_Cover_is_recognised_for_Spanish_destinations" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="SimpleChoiceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.Isis.Core.Wizard.SimpleChoiceTests.GetInsCodeForES" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Core.Test.Isis.Core.Wizard.SimpleChoiceTests.GetInsCodeForEsBookingGbPickup" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Core.Test.Isis.Core.Wizard.SimpleChoiceTests.GetInsCodeForGB" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Core.Test.Isis.Core.Wizard.SimpleChoiceTests.GetInsCodeForGbBookingEsPickup" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Mappers" executed="True" result="Failure" success="False" time="0.203" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="EmailMapperTests" executed="True" result="Failure" success="False" time="0.047" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Mappers.EmailMapperTests.CanCreateSendEmailRq" executed="True" result="Error" success="False" time="0.047" asserts="0">
                            <failure>
                              <message><![CDATA[System.Configuration.ConfigurationErrorsException : Unrecognized attribute 'RelativeEmailResourceDirectory'. Note that attribute names are case-sensitive. (D:\Development\Development\Core\Builds\Latest\Core.Test.dll.config line 103)]]></message>
                              <stack-trace><![CDATA[at System.Configuration.BaseConfigurationRecord.EvaluateOne(String[] keys, SectionInput input, Boolean isTrusted, FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult)
at System.Configuration.BaseConfigurationRecord.Evaluate(FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult, Boolean getLkg, Boolean getRuntimeObject, Object& result, Object& resultRuntimeObject)
at System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)
at System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)
at System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)
at System.Configuration.BaseConfigurationRecord.GetSection(String configKey, Boolean getLkg, Boolean checkPermission)
at System.Configuration.BaseConfigurationRecord.GetSection(String configKey)
at System.Configuration.ClientConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String sectionName)
at System.Configuration.ConfigurationManager.GetSection(String sectionName)
at Isis.Email.Configuration.EmailSetting.GetSettings(String configurationSection) in D:\Development\Development\Core\Isis.Email\Configuration\EmailSetting.cs:line 190
at Isis.Email.EmailXml.EmailXmlMessage..ctor() in D:\Development\Development\Core\Isis.Email\EmailXml\EmailXmlMessage.cs:line 196
at Isis.BusinessObjects.Factories.Interfaces.Mappers.EmailMapper.CreateSendEmailRQ(String message, String title, Boolean isHtml, List`1 recipientsTo, List`1 recipientsCC, List`1 recipientsBCC) in D:\Development\Development\Core\BusinessObjects\Isis\Factories\Interfaces\Mappers\EmailMapper.cs:line 11
at Core.Test.Isis.Mappers.EmailMapperTests.CanCreateSendEmailRq() in D:\Development\Development\Core\Core.Test\Isis\Mappers\EmailMapperTests.cs:line 22
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="LocationMapperTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Mappers.LocationMapperTests.Location_mapper_maps_a_location_from_an_OTA_Vehicle_Detail_structure_to_an_ILocation" executed="True" result="Success" success="True" time="0.031" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="WizardRateMapperTests" executed="True" result="Success" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetExplicitRateCodeRetainsXminusPrefixWhenPresent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetExplicitRatePrefixesRateWithXminus" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetExplicitRateReturnsEmptyForEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetExplicitRateReturnsNullForNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetRateRelateInputFromNullFleetParametersReturnsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetRateSelectInputFromMessageMapsCorrectlyCouponNumber" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetRateSelectInputFromMessageMapsCorrectlyInsuranceForFRIfIsAllInsurances" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetRateSelectInputFromMessageMapsCorrectlyInsuranceForFRWhenIsNotAllInsurances" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.GetRateSelectInputFromMessageMapsCorrectlyInsuranceForGBIfIsAllInsurances" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Mappers.WizardRateMapperTests.WizardRateMapperMapsFleetParameters" executed="True" result="Success" success="True" time="0.016" asserts="14" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="MessageBus" executed="True" result="Success" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.125" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Mappers" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ReservationMapperTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Processes" executed="True" result="Success" success="True" time="0.047" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="InsuranceOptionsTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                              <test-suite type="TestFixture" name="IsisEmailProcessTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Isis.MessageBus.Test.Processes.IsisEmailProcessTests.Can_create_an_Isis_email_process" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Isis.MessageBus.Test.Processes.IsisEmailProcessTests.Can_set_the_email_sender_on_the_isis_email_process" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                                  <test-case name="Core.Test.Isis.MessageBus.Test.Processes.IsisEmailProcessTests.Process_receives_a_message_of_type_IsisEmailRQ" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Isis.MessageBus.Test.Processes.IsisEmailProcessTests.Process_responds_with_email_not_sent_when_a_request_has_no_email_address" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ProcessTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Core.Test.Isis.MessageBus.Test.ProcessTests.OnRequestStatsByCountryProcessCanAcceptNullMessages" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                              <test-case name="Core.Test.Isis.MessageBus.Test.ProcessTests.OnRequestStatsByCountryProcessProducesAResult" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.Isis.MessageBus.Test.ProcessTests.OnRequestStatsByCountryProcessProducesAResultWithAllCountries" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                              <test-case name="Core.Test.Isis.MessageBus.Test.ProcessTests.OnRequestStatsByCountryProcessProducesAResultWithCountryStats" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                              <test-case name="Core.Test.Isis.MessageBus.Test.ProcessTests.OnRequestStatsByCountryProcessProducesResultsForCountries" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="RateRelateFromWizardProcessTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Core.Test.Isis.MessageBus.Test.RateRelateFromWizardProcessTests.RateRelateFromWizardProcessExists" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                              <test-case name="Core.Test.Isis.MessageBus.Test.RateRelateFromWizardProcessTests.RateRelateFromWizardProcessTest" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="0.109" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="AddressServiceTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Services.AddressServiceTests.CanGetAddressByAddressObject" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                          <test-case name="Core.Test.Isis.Services.AddressServiceTests.CanGetAddressByHouseNumberAndPostcode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Services.AddressServiceTests.CanGetAddressByPostcode" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="AgentServiceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Services.AgentServiceTests.CanotRetrieveAgentIfNoResponseFromMessageBus" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Services.AgentServiceTests.CanRetrieveAgentByUserId" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="AuditServiceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Services.AuditServiceTests.CanAuditFailedLogin" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Core.Test.Isis.Services.AuditServiceTests.CanAuditSuccessfulLogin" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CountryServiceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Services.CountryServiceTests.CanGetCountriesByLocale" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                          <test-case name="Core.Test.Isis.Services.CountryServiceTests.CanGetWizardCountriesByLocale" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DomainServiceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.Isis.Services.DomainServiceTests.CanGetBookingSources" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Isis.Services.DomainServiceTests.CanGetDomain" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Core.Test.Isis.Services.DomainServiceTests.CannotGetDomainWithNullParameters" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="ServiceBase" executed="True" result="Success" success="True" time="14.672" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="SchedulerTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                  <test-suite type="Namespace" name="StartupValidation" executed="True" result="Success" success="True" time="14.672" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="AppSettingsValidatorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.CanCreateInstance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.CanCreateInstanceWithEmptyList" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.CanCreateInstanceWithNullList" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.ValidationFailsWhenSettingsToValidateIsNotEmptyAndConfigKeysNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.ValidationFailsWhenSettingsToValidateIsNotPresentInConfigKeys" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.ValidationPassesWhenSettingsToValidateAndConfigKeysAreEmpty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.ValidationPassesWhenSettingsToValidateAndConfigKeysAreNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.AppSettingsValidatorTests.ValidationPassesWhenSettingsToValidateIsPresentInConfigKeys" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConnectionStringValidatorTests" executed="True" result="Success" success="True" time="14.641" asserts="0">
                        <results>
                          <test-case name="Core.Test.ServiceBase.StartupValidation.ConnectionStringValidatorTests.FailsWhenConnectionIsNotEstablished" executed="True" result="Success" success="True" time="14.641" asserts="0">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                          <test-case name="Core.Test.ServiceBase.StartupValidation.ConnectionStringValidatorTests.FailsWhenConnectionStringIsNotFound" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="Integration" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MsmqValidatorTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                      <test-suite type="TestFixture" name="StartupValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Core.Test.ServiceBase.StartupValidation.StartupValidatorTests.FailsWhenAllAtleastOneValidatorFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.StartupValidatorTests.PassesWhenAllValidatorsPass" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.StartupValidatorTests.PassesWhenEmptyListOfValidatorsIsProvided" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.ServiceBase.StartupValidation.StartupValidatorTests.PassesWhenNoValidatorsAreProvided" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Utilities" executed="True" result="Success" success="True" time="0.109" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="AppSettingsManagerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Core.Test.Utilities.AppSettingsManagerTests.DefaultValueIsIgnoredWhenConfigEntryIsFound" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.AppSettingsManagerTests.GetBoolReturnsDefaultValueWhenConfigEntryIsNotFound" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DateTimeFunctionsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.DatePortionIsIncludedInFormattedTimeWhenIncludeDatePortionIsTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.DatePortionIsNotIncludedInFormattedTimeWhenIncludeDatePortionIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.IsValidTimeIsFalseWhenOpeningAndClosingTimesAreZero" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.IsValidTimeIsFalseWhenTimeToCheckFallsOutsideOpeningAndClosingTimes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.IsValidTimeIsTrueWhenTimeToCheckFallsAfterOpeningButBeforeMidnightAndClosingTimeIsBeforeMidday" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.IsValidTimeIsTrueWhenTimeToCheckFallsBetweenOpeningAndClosingTimes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.IsValidTimeIsTrueWhenTimeToCheckFallsBetweenOpeningAndClosingTimesAndClosingTimeIsBeforeMidday" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.TimeIsReturnedCorrectlyIn12HourFormat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.DateTimeFunctionsTests.TimeIsReturnedCorrectlyIn24HourFormat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="EnumerationHelperTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.ArgumentNullExceptionIsThrownWhenEnumIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.DescriptionToEnumReturnsMasterCardTypeWhenDescriptionIsCM" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.DescriptionToEnumReturnsNullWhenDescriptionIsCMInLowerCaseAndIgnoreCaseIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.DescriptionToEnumReturnsUnspecifiedTypeWhenDescriptionIsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.DescriptionToEnumReturnsVisaTypeWhenDescriptionIsCXInLowerCaseAndIgnoreCaseIsTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.DescriptionToEnumThrowsNullReferenceExceptionWhenDescriptionIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.EnumToDescriptionReturnsCXForVisaCreditCardType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.EnumToDescriptionReturnsEmptyStringForCreditCardTypeWithoutAnyDescriptionSet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Core.Test.Utilities.EnumerationHelperTests.EnumToDescriptionReturnsEmptyStringForUnspecifiedCreditCardType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Extensions" executed="True" result="Success" success="True" time="0.078" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ArgumentNullExceptionExtensionsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Core.Test.Utilities.Extensions.ArgumentNullExceptionExtensionsTests.ExceptionIsNotThrownWhenArgumentIsNotNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Utilities.Extensions.ArgumentNullExceptionExtensionsTests.ExceptionThrownWhenArgumentIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="AwdStringExtensionsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.Utilities.Extensions.AwdStringExtensionsTests.AnExtraZeroIsAddedAtSixthPositionForValidAwd" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.AwdStringExtensionsTests.FormattingDoesnotHappenWhenAwdIsNullOrEmpty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Core.Test.Utilities.Extensions.AwdStringExtensionsTests.FormattingDoesnotHappenWhenAwdOnlyContainsWhiteSpaces" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.AwdStringExtensionsTests.FormattingOnlyHappensWhenAwdLengthIsEqualToSeven" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DataRowExtensionsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.BoolColumnReturnsFalseWhenColumnContainsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.BoolColumnReturnsFalseWhenColumnContainsInvalidValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.BoolColumnReturnsFalseWhenColumnIsNotFound" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.BoolColumnReturnsTrueWhenColumnContainsTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.CanReturnDateTimeColumnValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.CanReturnGuidColumnValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.DefaultProvidedValueReturnedForBoolColumnWithDbNullValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.ExceptionIsThrownWhenColumnIsNotFound" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.FalseReturnedForBoolColumnWithDbNullValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.NoExceptionWhenColumnIsNotFoundAndCheckForColumnIsDisabled" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.NullReturnedForStringColumnForNullValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.StringColumnReturnsColumnValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.DataRowExtensionsTests.StringColumnWithNullValueReturnsEmptyStringWhenDefaultValueOfEmptyStringIsProvided" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PageExtensionsTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="Core.Test.Utilities.Extensions.PageExtensionsTests.HasInvalidValidatorControlReturnsFalseForAllValidInput" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.PageExtensionsTests.HasInvalidValidatorControlReturnsFalseForCollectionNotHavingAnyBaseValidator" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.PageExtensionsTests.HasInvalidValidatorControlReturnsFalseForNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.PageExtensionsTests.HasInvalidValidatorControlReturnsTrueForAtleastOneInvalidInput" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Core.Test.Utilities.Extensions.PageExtensionsTests.HasInvalidValidatorControlReturnsTrueForMoreThanOneInvalidInputs" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TimeFormatterTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Verastream" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Test" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CDB_CS_LibrarySessionTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Web" executed="True" result="Success" success="True" time="0.250" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Shared" executed="True" result="Success" success="True" time="0.250" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.250" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="CMS" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AtlasTagTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.AtlasTagTests.CanReturnCorrectlyFormattedConfirmationTag" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.AtlasTagTests.CanReturnCorrectlyFormattedQuoteTag" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.AtlasTagTests.DefaultValueIsSetOnInstantiating" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TagGeneratorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TagGeneratorTests.TagGeneratorPropertiesAreSetBasedOnParametersProvided" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="TaggingBasePageTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TaggingBasePageTests.AnInstanceOfOmnitureScriptIsAlwaysReturned" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TaggingBasePageTests.AnInstanceOfTagGeneratorIsAlwaysReturned" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TaggingBasePageTests.OmnitureScriptPageNameIsSetAfterPageLoad" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TaggingBasePageTests.RegisterTaggingScriptSetsTagGeneratorsCurrentDomainInfoProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.CMS.TaggingBasePageTests.RegisterTaggingScriptSetsTagGeneratorsPageNameProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Handlers" executed="True" result="Success" success="True" time="0.156" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Javascript" executed="True" result="Success" success="True" time="0.156" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="PageScriptContextExtensionTests" executed="True" result="Success" success="True" time="0.156" asserts="0">
                                    <results>
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.PageScriptContextExtensionTests.AnEmptyStringArrayIsReturnedWhenContextItemsDoesnotContainPageScriptItem" executed="True" result="Success" success="True" time="0.156" asserts="1" />
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.PageScriptContextExtensionTests.CanAddMultiplePageScripts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.PageScriptContextExtensionTests.CanAddPageScript" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.PageScriptContextExtensionTests.DifferentPageScriptsCouldBeAddedThroughMultipleCallsToAddPageScripts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.PageScriptContextExtensionTests.PageScriptIsNotAddedIfItAlreadyExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="ScriptCombinerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.ScriptCombinerTests.CacheDurationIsSetAsPerConfigValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                      <test-case name="Core.Test.Web.Shared.Test.Handlers.Javascript.ScriptCombinerTests.CanReturnDefaultCacheManager" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Scripts" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ScriptRendererTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.ScriptRendererTests.CanInstantiateRenderer" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.ScriptRendererTests.ThrowsExceptionWhenContextParameterIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.ScriptRendererTests.ThrowsExceptionWhenPageParameterIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SiteScriptsManagerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.SiteScriptsManagerTests.CanRegisterFrameworkScript" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.SiteScriptsManagerTests.CanRegisterNewScripts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.SiteScriptsManagerTests.CanReturnAllFrameworkScripts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.SiteScriptsManagerTests.JQueryScriptIsIncludedByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Scripts.SiteScriptsManagerTests.JQueryTemplateScriptIsIncludedByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="Namespace" name="Validation" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ContainingDivValidationCSSModifierTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ContainingDivValidationCSSModifierTests.InvalidClassIsAddedToWebControlsParentsAttributesCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ContainingDivValidationCSSModifierTests.InvalidClassIsNotAddedIfParentsAttributesListContainsInvalidClass" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ContainingDivValidationCSSModifierTests.InvalidClassIsRemovedFromAttributesList" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ValidationCSSModifierTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ValidationCSSModifierTests.InvalidClassIsAddedToWebControlsCssClassProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ValidationCSSModifierTests.InvalidClassIsNotAddedIfCssClassPropertyContainsInvalidClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                  <test-case name="Core.Test.Web.Shared.Test.Validation.ValidationCSSModifierTests.InvalidClassIsRemovedFromWebControlCssClassProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="WizardGateway" executed="True" result="Success" success="True" time="0.219" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Client" executed="True" result="Success" success="True" time="0.219" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.219" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="CdbProfileTests" executed="True" result="Inconclusive" success="False" time="0.109" asserts="0">
                            <results>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.CanCreateAvisPreferredProfileWithAvisAccount" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.CanCreateAvisPreferredProfileWithCreditCardNumber" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.CanCreateAvisPreferredProfileWithIsAirPlusProfileFlagSetToTrue" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.CanCreateAvisPreferredProfileWithoutCreditCardNumber" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.CanModifyAvisPreferredProfileWithAvisAccount" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Core.Test.WizardGateway.Client.Test.CdbProfileTests.IsAirPlusProfileFlagIsTrueOnWizardMemberForAirPlusProfile" executed="False" result="Ignored">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ClientInterfaceTests" executed="True" result="Success" success="True" time="0.109" asserts="0">
                            <results>
                              <test-case name="Core.Test.WizardGateway.Client.Test.ClientInterfaceTests.WizardGatewayExtendedExceptionIsCaughtSuccessfully" executed="True" result="Success" success="True" time="0.094" asserts="2">
                                <categories>
                                  <category name="Integration" />
                                </categories>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="WizardGatway" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite type="Namespace" name="ClientLibrary" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="DataAccessTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                          <test-suite type="TestFixture" name="FreeMilesCalculatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.FreeMilesCalculatorTests.Can_correctly_calculate_free_miles_using_non_null_freeMilesAverage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.FreeMilesCalculatorTests.Null_freeMilesAverage_results_in_null_free_miles_for_the_rental_period" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="RentalDaysCalculatorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.RentalDaysCalculatorTests.GetRentalDays_LessThanOneHourOverExactNumberOfDays_RoundsDown" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.RentalDaysCalculatorTests.GetRentalDays_MoreThanOneHourOverExactNumberOfDays_RoundsUpToOneMoreDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="WizardFreeMilesCalculatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.WizardFreeMilesCalculatorTests.Daily_free_miles_for_rental_period_returned_when_wizard_rental_length_less_than_one_day" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.WizardFreeMilesCalculatorTests.Non_null_free_miles_for_rental_period_returned_when_wizard_rental_length_and_valid_free_miles_average_are_valid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.WizardFreeMilesCalculatorTests.Non_null_free_miles_for_rental_period_returned_when_wizard_rental_length_less_than_one_day_and_null_parameters_passed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.WizardFreeMilesCalculatorTests.Null_free_miles_for_rental_period_returned_when_wizard_rental_length_is_empty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Core.Test.WizardGatway.ClientLibrary.Test.WizardFreeMilesCalculatorTests.Null_free_miles_for_rental_period_returned_when_wizard_rental_length_is_null" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="WizardRentalLengthStringParserTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Namespace" name="Interfaces" executed="True" result="Success" success="True" time="0.281" asserts="0">
        <results>
          <test-suite type="Namespace" name="CommerceEngine" executed="True" result="Success" success="True" time="0.047" asserts="0">
            <results>
              <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="VehicleQuoteFactoryTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Interfaces.CommerceEngine.Test.VehicleQuoteFactoryTest.AdditionalMileageIncludingTaxReturns0ForEmptyTaxIndicator" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.CommerceEngine.Test.VehicleQuoteFactoryTest.AdditionalMileageIncludingTaxReturns0ForNullPricePerdistanceUnitOverLimitedDistance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.CommerceEngine.Test.VehicleQuoteFactoryTest.AdditionalMileageIncludingTaxReturns0ForNullTaxIndicator" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.CommerceEngine.Test.VehicleQuoteFactoryTest.AdditionalMileageIncludingTaxReturnsExpectedValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="WizardMemberFactoryTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Interfaces.CommerceEngine.Test.WizardMemberFactoryTest.RetrieveNoWizardMemberTest" executed="False" result="Ignored">
                        <categories>
                          <category name="Integration" />
                        </categories>
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Interfaces.CommerceEngine.Test.WizardMemberFactoryTest.RetrieveWizardMemberTest" executed="False" result="Ignored">
                        <categories>
                          <category name="Integration" />
                        </categories>
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Interfaces.CommerceEngine.Test.WizardMemberFactoryTest.RetrieveWizardMemberViaWizardGatewayDoesNotThrowExceptionForInvalidSurname" executed="False" result="Ignored">
                        <categories>
                          <category name="Integration" />
                        </categories>
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Interfaces.CommerceEngine.Test.WizardMemberFactoryTest.RetrieveWizardMemberWrongSurnameTest" executed="False" result="Ignored">
                        <categories>
                          <category name="Integration" />
                        </categories>
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Interfaces.CommerceEngine.Test.WizardMemberFactoryTest.SurnamesMatchTest" executed="True" result="Success" success="True" time="0.047" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Inquira" executed="True" result="Success" success="True" time="0.172" asserts="0">
            <results>
              <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.172" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="LocationSearchResultTest" executed="True" result="Success" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.GetLocationSearchNoResultsTest" executed="True" result="Success" success="True" time="0.094" asserts="1">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.GetLocationSearchResultsTest" executed="True" result="Success" success="True" time="0.016" asserts="1">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeARTest" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeBNTest" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeCATest" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeGenericTest1" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeGenericTest2" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeMDTest" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNLTest" executed="True" result="Success" success="True" time="0.016" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest1" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest2" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest3" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest4" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest5" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest6" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest7" executed="True" result="Success" success="True" time="0.016" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest8" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeNotAPostcodeTest9" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeUKTest1" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeUKTest2" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Inquira.Test.LocationSearchResultTest.MatchPostCodeUKTest3" executed="True" result="Success" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Wizard" executed="True" result="Success" success="True" time="0.047" asserts="0">
            <results>
              <test-suite type="Namespace" name="Test" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CDBFieldConstraintsTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.AddressFieldsRegexTest" executed="True" result="Success" success="True" time="0.000" asserts="33" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.AddressLine1MaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.AddressLine2MaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.AddressLine3MaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.CityOfBirthMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.CompanyNameMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DriverFirstNameMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DriverFirstNameRegexTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DriverLastNameMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DriverLastNameRegexTest" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DrivingLicenseNumberMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.DrivingLicenseNumberRegexTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.EmailAddressMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.FirstNameMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.FirstNameRegexTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.GetTruncatedStringTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsAddressLine3VisibleTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsCdbSafeAddressLine1LengthTest" executed="True" result="Success" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsCdbSafeAddressLine1TestWithDiacritic" executed="True" result="Success" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsCdbSafeAddressLine2LengthTest" executed="True" result="Success" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsCdbSafeAddressLine3LengthTest" executed="True" result="Success" success="True" time="0.016" asserts="3">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.IsCdbSafeCompanyNameLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="Integration" />
                        </categories>
                      </test-case>
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.LastNameMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.PhoneNumberMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.PhoneNumberRegexTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.PostCodeMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.TitleMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Interfaces.Wizard.Test.CDBFieldConstraintsTest.WizardNumberMaxLengthTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ConverterTest" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                    <results>
                      <test-case name="Interfaces.Wizard.Test.ConverterTest.WizardTimeToUtcTest" executed="False" result="Ignored">
                        <categories>
                          <category name="Integration" />
                        </categories>
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Namespace" name="Logging" executed="True" result="Success" success="True" time="0.016" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.016" asserts="0">
            <results>
              <test-suite type="TestFixture" name="MessageFormat" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Logging.Tests.MessageFormat.MessageFormatsCorrectlyWithoutHttpContext" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Namespace" name="Web" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
        <results>
          <test-suite type="Namespace" name="Test" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
            <results>
              <test-suite type="TestFixture" name="SecurityManagerTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
              <test-suite type="TestFixture" name="UserHelperTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>